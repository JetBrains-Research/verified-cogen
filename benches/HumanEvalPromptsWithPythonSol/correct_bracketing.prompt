 brackets is a string of "(" and ")".
return True if every opening bracket has a corresponding closing bracket.

>>> correct_bracketing("(")
False
>>> correct_bracketing("()")
True
>>> correct_bracketing("(()())")
True
>>> correct_bracketing(")(()")
False

Here's a correct unverified solution in python:
```python
def correct_bracketing(brackets: str):
    depth = 0
    for b in brackets:
        if b == "<":
            depth += 1
        else:
            depth -= 1
        if depth < 0:
            return False
    return depth == 0
def check(correct_bracketing):
    assert correct_bracketing("<>")
    assert correct_bracketing("<<><>>")
    assert not correct_bracketing("><<>")
    assert not correct_bracketing("<")
check(correct_bracketing)
def correct_bracketing(brackets: str):
    depth = 0
    for b in brackets:
        if b == "(":
            depth += 1
        else:
            depth -= 1
        if depth < 0:
            return False
    return depth == 0
def check(correct_bracketing):
    assert correct_bracketing("()")
    assert correct_bracketing("(()())")
    assert not correct_bracketing(")(()")
    assert not correct_bracketing("(")
check(correct_bracketing)
```
