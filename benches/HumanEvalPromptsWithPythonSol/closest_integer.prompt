
Create a function that takes a value (string) representing a number
and returns the closest integer to it. If the number is equidistant
from two integers, round it away from zero.

Examples
>>> closest_integer("10")
10
>>> closest_integer("15.3")
15

Note:
Rounding away from zero means that if the given number is equidistant
from two integers, the one you should return is the one that is the
farthest from zero. For example closest_integer("14.5") should
return 15 and closest_integer("-14.5") should return -15.

Here's a correct unverified solution in python:
```python
def closest_integer(value):
    from math import ceil, floor

    if value.count('.') == 1:
        # remove trailing zeros
        while (value[-1] == '0'):
            value = value[:-1]

    num = float(value)
    if value[-2:] == '.5':
        if num > 0:
            res = ceil(num)
        else:
            res = floor(num)
    elif len(value) > 0:
        res = int(round(num))
    else:
        res = 0

    return res

def check(closest_integer):
    # Check some simple cases
    assert closest_integer("10") == 10, "Test 1"
    assert closest_integer("15.3") == 15, "Test 3"
    # Check some edge cases that are easy to work out by hand.
check(closest_integer)
```
