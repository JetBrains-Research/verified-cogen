
Given the lengths of the three sides of a triangle. Return the area of
the triangle rounded to 2 decimal points if the three sides form a valid triangle. 
Otherwise return -1
Three sides make a valid triangle when the sum of any two sides is greater 
than the third side.
Example:
triangle_area(3, 4, 5) == 6.00
triangle_area(1, 2, 10) == -1

Here's a correct unverified solution in python:
```python
def triangle_area(a, h):
    return a * h / 2.0
def check(triangle_area):
    assert triangle_area(5, 3) == 7.5
check(triangle_area)
def triangle_area(a, b, c):
    if a + b <= c or a + c <= b or b + c <= a:
        return -1 
    s = (a + b + c)/2    
    area = (s * (s - a) * (s - b) * (s - c)) ** 0.5
    area = round(area, 2)
    return area
def check(triangle_area):
    # Check some simple cases
    assert triangle_area(3, 4, 5) == 6.00, "This prints if this assert fails 1 (good for debugging!)"
    assert triangle_area(1, 2, 10) == -1
check(triangle_area)
```
