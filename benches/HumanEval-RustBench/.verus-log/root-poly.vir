(@ "vstd/std_specs/control_flow.rs:12:1: 12:51 (#0)" (Datatype :path "core!ops.control_flow.ControlFlow." :proxy (@ "vstd/std_specs/control_flow.rs:12:1: 12:51 (#0)"
   "vstd!std_specs.control_flow.ExControlFlow."
  ) :owning_module "vstd!std_specs.control_flow." :visibility (Visibility :restricted_to None) :transparency (DatatypeTransparency
   WhenVisible (Visibility :restricted_to None)
  ) :typ_params (
   (tuple "B" (AcceptRecursiveType Accept))
   (tuple "C" (AcceptRecursiveType RejectInGround))
  ) :typ_bounds () :variants (
   (Variant :name "Continue" :fields ((-> 0 (tuple (Typ TypParam "C") Exec (Visibility :restricted_to None)))) :ctor_style (CtorPrintStyle
     Parens))
   (Variant :name "Break" :fields ((-> 0 (tuple (Typ TypParam "B") Exec (Visibility :restricted_to None)))) :ctor_style (CtorPrintStyle
     Parens))
  ) :mode Exec :ext_equal false))

(@ "vstd/std_specs/control_flow.rs:16:1: 16:37 (#0)" (Datatype :path "core!convert.Infallible." :proxy (@ "vstd/std_specs/control_flow.rs:16:1: 16:37 (#0)"
   "vstd!std_specs.control_flow.ExInfallible."
  ) :owning_module "vstd!std_specs.control_flow." :visibility (Visibility :restricted_to None) :transparency (DatatypeTransparency
   Never
  ) :typ_params () :typ_bounds () :variants () :mode Exec :ext_equal false))

(@ "vstd/std_specs/core.rs:89:1: 89:49 (#0)" (Datatype :path "core!option.Option." :proxy (@ "vstd/std_specs/core.rs:89:1: 89:49 (#0)"
   "vstd!std_specs.core.ExOption."
  ) :owning_module "vstd!std_specs.core." :visibility (Visibility :restricted_to None) :transparency (DatatypeTransparency WhenVisible
   (Visibility :restricted_to None)
  ) :typ_params (
   (tuple "V" (AcceptRecursiveType Accept))
  ) :typ_bounds () :variants (
   (Variant :name "None" :fields () :ctor_style (CtorPrintStyle Const))
   (Variant :name "Some" :fields ((-> 0 (tuple (Typ TypParam "V") Exec (Visibility :restricted_to None)))) :ctor_style (CtorPrintStyle
     Parens))
  ) :mode Exec :ext_equal true))

(@ "no location" (Datatype :path "tuple%0." :proxy None :owning_module None :visibility (Visibility :restricted_to None) :transparency
  (DatatypeTransparency WhenVisible (Visibility :restricted_to None)) :typ_params () :typ_bounds () :variants (
   (Variant :name "tuple%0" :fields () :ctor_style (CtorPrintStyle Tuple))
  ) :mode Exec :ext_equal false))

(@ "vstd/std_specs/control_flow.rs:33:1: 36:2 (#0)" (Function
  :name (Fun :path "core!option.impl&%40.branch.") :proxy (@ "vstd/std_specs/control_flow.rs:33:1: 36:2 (#0)" "vstd!std_specs.control_flow.ex_option_branch.")
  :kind (FunctionKind Static) :visibility (Visibility :restricted_to None) :owning_module "vstd!std_specs.control_flow." :mode
  Exec :fuel 1 :typ_params (
   "T"
  ) :typ_bounds () :params (
   (@ "vstd/std_specs/control_flow.rs:33:28: 33:45 (#0)" (Param :name (VarIdent "option" (VarIdentDisambiguate VirParam)) :typ
     (Typ Datatype "core!option.Option." ((Typ TypParam "T")) ()) :mode Exec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/std_specs/control_flow.rs:33:55: 36:2 (#0)" (Param :name (VarIdent "cf" (VarIdentDisambiguate VirParam)) :typ
    (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible."
         () ())
       ) ()
      ) (Typ TypParam "T")
     ) ()
    ) :mode Exec :is_mut false :unwrapped_info None)
  ) :require () :ensure (
   (@@ "vstd/std_specs/control_flow.rs:38:9: 41:10 (#0)" (> Binary (BinaryOp Eq Spec) (@@ "vstd/std_specs/control_flow.rs:38:9: 38:11 (#0)"
      (> Var (VarIdent "cf" (VarIdentDisambiguate VirParam))) (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype "core!option.Option."
         ((Typ Datatype "core!convert.Infallible." () ())) ()
        ) (Typ TypParam "T")
       ) ())
     ) (@@ "vstd/std_specs/control_flow.rs:39:13: 39:20 (#0)" (> If (@@ "vstd/std_specs/control_flow.rs:39:13: 39:20 (#0)" (> Binary
         (BinaryOp And) (@@ "vstd/std_specs/control_flow.rs:39:13: 39:20 (#0)" (> UnaryOpr (UnaryOpr IsVariant :datatype "core!option.Option."
            :variant "Some"
           ) (@@ "vstd/std_specs/control_flow.rs:38:22: 38:28 (#0)" (> Var (VarIdent "option" (VarIdentDisambiguate VirParam))) (Typ Datatype
             "core!option.Option." ((Typ TypParam "T")) ()))
          ) (Typ Bool)
         ) (@@ "vstd/std_specs/control_flow.rs:39:13: 39:20 (#0)" (> Const (Constant Bool true)) (Typ Bool))
        ) (Typ Bool)
       ) (@@ "vstd/std_specs/control_flow.rs:39:13: 39:20 (#0)" (> Block (
          (@ "vstd/std_specs/control_flow.rs:39:13: 39:20 (#0)" (Stmt Decl :pattern (@@ "vstd/std_specs/control_flow.rs:39:13: 39:20 (#0)"
             (Pattern Var :name (VarIdent "v" (VarIdentDisambiguate RustcId 23)) :mutable false) (Typ TypParam "T")
            ) :mode Exec :init (@@ "vstd/std_specs/control_flow.rs:39:13: 39:20 (#0)" (> UnaryOpr (UnaryOpr Field (FieldOpr :datatype "core!option.Option."
                :variant "Some" :field "0" :get_variant false :check (VariantCheck None))
              ) (@@ "vstd/std_specs/control_flow.rs:38:22: 38:28 (#0)" (> UnaryOpr (UnaryOpr Unbox (Typ Datatype "core!option.Option." ((Typ
                    TypParam "T")
                  ) ())
                ) (@@ "vstd/std_specs/control_flow.rs:38:22: 38:28 (#0)" (> UnaryOpr (UnaryOpr Box (Typ Datatype "core!option.Option." ((Typ TypParam
                      "T")
                    ) ())
                  ) (@@ "vstd/std_specs/control_flow.rs:38:22: 38:28 (#0)" (> Var (VarIdent "option" (VarIdentDisambiguate VirParam))) (Typ Datatype
                    "core!option.Option." ((Typ TypParam "T")) ()))
                 ) (Typ Boxed (Typ Datatype "core!option.Option." ((Typ TypParam "T")) ())))
               ) (Typ Datatype "core!option.Option." ((Typ TypParam "T")) ()))
             ) (Typ TypParam "T"))))
         ) (@@ "vstd/std_specs/control_flow.rs:39:24: 39:48 (#0)" (> Ctor "core!ops.control_flow.ControlFlow." "Continue" ((-> 0 (@@ "vstd/std_specs/control_flow.rs:39:46: 39:47 (#0)"
              (> Var (VarIdent "v" (VarIdentDisambiguate RustcId 23))) (Typ TypParam "T")))
           ) None
          ) (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible."
               () ())
             ) ()
            ) (Typ TypParam "T")
           ) ()))
        ) (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible."
             () ())
           ) ()
          ) (Typ TypParam "T")
         ) ())
       ) (@@ "vstd/std_specs/control_flow.rs:40:13: 40:17 (#0)" (> Block () (@@ "vstd/std_specs/control_flow.rs:40:21: 40:45 (#0)"
          (> Ctor "core!ops.control_flow.ControlFlow." "Break" ((-> 0 (@@ "vstd/std_specs/control_flow.rs:40:40: 40:44 (#0)" (> UnaryOpr
               (UnaryOpr Box (Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ())) (@@ "vstd/std_specs/control_flow.rs:40:40: 40:44 (#0)"
                (> Ctor "core!option.Option." "None" () None) (Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible."
                   () ())
                 ) ()))
              ) (Typ Boxed (Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()))))
           ) None
          ) (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible."
               () ())
             ) ()
            ) (Typ TypParam "T")
           ) ()))
        ) (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible."
             () ())
           ) ()
          ) (Typ TypParam "T")
         ) ()))
      ) (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible."
           () ())
         ) ()
        ) (Typ TypParam "T")
       ) ()))
    ) (Typ Bool))
  ) :decrease () :decrease_when None :decrease_by None :broadcast_forall None :fndef_axioms None :mask_spec None :item_kind
  (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks true :inline false :hidden () :broadcast_forall
   false :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by
   false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method
   true :prophecy_dependent false :size_of_broadcast_proof false
  ) :body None :extra_dependencies ()))

(@ "vstd/std_specs/control_flow.rs:47:1: 47:85 (#0)" (Function
  :name (Fun :path "core!option.impl&%41.from_residual.") :proxy (@ "vstd/std_specs/control_flow.rs:47:1: 47:85 (#0)" "vstd!std_specs.control_flow.ex_option_from_residual.")
  :kind (FunctionKind Static) :visibility (Visibility :restricted_to None) :owning_module "vstd!std_specs.control_flow." :mode
  Exec :fuel 1 :typ_params (
   "T"
  ) :typ_bounds () :params (
   (@ "vstd/std_specs/control_flow.rs:47:35: 47:61 (#0)" (Param :name (VarIdent "option" (VarIdentDisambiguate VirParam)) :typ
     (Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()) :mode Exec :is_mut false :unwrapped_info
     None))
  ) :ret (@ "vstd/std_specs/control_flow.rs:47:76: 47:85 (#0)" (Param :name (VarIdent "option2" (VarIdentDisambiguate VirParam))
    :typ (Typ Datatype "core!option.Option." ((Typ TypParam "T")) ()) :mode Exec :is_mut false :unwrapped_info None)
  ) :require () :ensure (
   (@@ "vstd/std_specs/control_flow.rs:49:9: 49:25 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!std_specs.option.is_none.")
      ((Typ Datatype "core!convert.Infallible." () ())) () (AutospecUsage Final)
     ) ((@@ "vstd/std_specs/control_flow.rs:49:9: 49:15 (#0)" (> UnaryOpr (UnaryOpr Box (Typ Datatype "core!option.Option." ((Typ Datatype
            "core!convert.Infallible." () ())
          ) ())
        ) (@@ "vstd/std_specs/control_flow.rs:49:9: 49:15 (#0)" (> Var (VarIdent "option" (VarIdentDisambiguate VirParam))) (Typ Datatype
          "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()))
       ) (Typ Boxed (Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()))))
    ) (Typ Bool))
   (@@ "vstd/std_specs/control_flow.rs:50:9: 50:26 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!std_specs.option.is_none.")
      ((Typ TypParam "T")) () (AutospecUsage Final)
     ) ((@@ "vstd/std_specs/control_flow.rs:50:9: 50:16 (#0)" (> UnaryOpr (UnaryOpr Box (Typ Datatype "core!option.Option." ((Typ TypParam
            "T")
          ) ())
        ) (@@ "vstd/std_specs/control_flow.rs:50:9: 50:16 (#0)" (> Var (VarIdent "option2" (VarIdentDisambiguate VirParam))) (Typ Datatype
          "core!option.Option." ((Typ TypParam "T")) ()))
       ) (Typ Boxed (Typ Datatype "core!option.Option." ((Typ TypParam "T")) ()))))
    ) (Typ Bool))
  ) :decrease () :decrease_when None :decrease_by None :broadcast_forall None :fndef_axioms None :mask_spec None :item_kind
  (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks true :inline false :hidden () :broadcast_forall
   false :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by
   false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method
   false :prophecy_dependent false :size_of_broadcast_proof false
  ) :body None :extra_dependencies ()))

(@ "vstd/std_specs/control_flow.rs:55:1: 55:54 (#0)" (Function
  :name (Fun :path "vstd!std_specs.control_flow.spec_from.") :proxy None :kind (FunctionKind Static) :visibility (Visibility
   :restricted_to None
  ) :owning_module "vstd!std_specs.control_flow." :mode Spec :fuel 1 :typ_params (
   "S"
   "T"
  ) :typ_bounds () :params (
   (@ "vstd/std_specs/control_flow.rs:55:29: 55:37 (#0)" (Param :name (VarIdent "value" (VarIdentDisambiguate VirParam)) :typ
     (Typ TypParam "T") :mode Spec :is_mut false :unwrapped_info None))
   (@ "vstd/std_specs/control_flow.rs:55:39: 55:45 (#0)" (Param :name (VarIdent "ret" (VarIdentDisambiguate VirParam)) :typ (Typ
      TypParam "S"
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/std_specs/control_flow.rs:55:50: 55:54 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam))
    :typ (Typ Bool) :mode Spec :is_mut false :unwrapped_info None)
  ) :require () :ensure () :decrease () :decrease_when None :decrease_by None :broadcast_forall None :fndef_axioms None :mask_spec
  None :item_kind (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks true :inline false :hidden () :broadcast_forall
   false :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by
   false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method
   false :prophecy_dependent false :size_of_broadcast_proof false
  ) :body None :extra_dependencies ()))

(@ "vstd/std_specs/control_flow.rs:57:1: 57:65 (#0)" (Function
  :name (Fun :path "vstd!std_specs.control_flow.spec_from_blanket_identity.") :proxy None :kind (FunctionKind Static) :visibility
  (Visibility :restricted_to None) :owning_module "vstd!std_specs.control_flow." :mode Proof :fuel 1 :typ_params (
   "T"
  ) :typ_bounds () :params (
   (@ "vstd/std_specs/control_flow.rs:57:54: 57:58 (#0)" (Param :name (VarIdent "t" (VarIdentDisambiguate VirParam)) :typ (Typ
      TypParam "T"
     ) :mode Spec :is_mut false :unwrapped_info None))
   (@ "vstd/std_specs/control_flow.rs:57:60: 57:64 (#0)" (Param :name (VarIdent "s" (VarIdentDisambiguate VirParam)) :typ (Typ
      TypParam "T"
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/std_specs/control_flow.rs:57:65: 57:65 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam))
    :typ (Typ Datatype "tuple%0." () ()) :mode Proof :is_mut false :unwrapped_info None)
  ) :require () :ensure (
   (@@ "vstd/std_specs/control_flow.rs:59:9: 59:43 (#0)" (> Binary (BinaryOp Implies) (@@ "vstd/std_specs/control_flow.rs:59:9: 59:32 (#0)"
      (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!std_specs.control_flow.spec_from.") ((Typ TypParam "T") (Typ
          TypParam "T")
        ) () (AutospecUsage Final)
       ) ((@@ "vstd/std_specs/control_flow.rs:59:27: 59:28 (#0)" (> Var (VarIdent "t" (VarIdentDisambiguate VirParam))) (Typ TypParam
          "T")
        ) (@@ "vstd/std_specs/control_flow.rs:59:30: 59:31 (#0)" (> Var (VarIdent "s" (VarIdentDisambiguate VirParam))) (Typ TypParam
          "T")))
      ) (Typ Bool)
     ) (@@ "vstd/std_specs/control_flow.rs:59:37: 59:43 (#0)" (> Binary (BinaryOp Eq Spec) (@@ "vstd/std_specs/control_flow.rs:59:37: 59:38 (#0)"
        (> Var (VarIdent "t" (VarIdentDisambiguate VirParam))) (Typ TypParam "T")
       ) (@@ "vstd/std_specs/control_flow.rs:59:42: 59:43 (#0)" (> Var (VarIdent "s" (VarIdentDisambiguate VirParam))) (Typ TypParam
         "T"))
      ) (Typ Bool))
    ) (Typ Bool))
  ) :decrease () :decrease_when None :decrease_by None :broadcast_forall (tuple ((@ "vstd/std_specs/control_flow.rs:57:54: 57:58 (#0)"
     (Param :name (VarIdent "t" (VarIdentDisambiguate VirParam)) :typ (Typ TypParam "T") :mode Spec :is_mut false :unwrapped_info
      None)
    ) (@ "vstd/std_specs/control_flow.rs:57:60: 57:64 (#0)" (Param :name (VarIdent "s" (VarIdentDisambiguate VirParam)) :typ (Typ
       TypParam "T"
      ) :mode Spec :is_mut false :unwrapped_info None))
   ) (@@ "vstd/std_specs/control_flow.rs:57:1: 57:65 (#0)" (> Binary (BinaryOp Implies) (@@ "vstd/std_specs/control_flow.rs:57:1: 57:65 (#0)"
      (> Const (Constant Bool true)) (Typ Bool)
     ) (@@ "vstd/std_specs/control_flow.rs:59:9: 59:43 (#0)" (> Binary (BinaryOp Implies) (@@ "vstd/std_specs/control_flow.rs:59:9: 59:32 (#0)"
        (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!std_specs.control_flow.spec_from.") ((Typ TypParam "T") (Typ
            TypParam "T")
          ) () (AutospecUsage Final)
         ) ((@@ "vstd/std_specs/control_flow.rs:59:27: 59:28 (#0)" (> Var (VarIdent "t" (VarIdentDisambiguate VirParam))) (Typ TypParam
            "T")
          ) (@@ "vstd/std_specs/control_flow.rs:59:30: 59:31 (#0)" (> Var (VarIdent "s" (VarIdentDisambiguate VirParam))) (Typ TypParam
            "T")))
        ) (Typ Bool)
       ) (@@ "vstd/std_specs/control_flow.rs:59:37: 59:43 (#0)" (> Binary (BinaryOp Eq Spec) (@@ "vstd/std_specs/control_flow.rs:59:37: 59:38 (#0)"
          (> Var (VarIdent "t" (VarIdentDisambiguate VirParam))) (Typ TypParam "T")
         ) (@@ "vstd/std_specs/control_flow.rs:59:42: 59:43 (#0)" (> Var (VarIdent "s" (VarIdentDisambiguate VirParam))) (Typ TypParam
           "T"))
        ) (Typ Bool))
      ) (Typ Bool))
    ) (Typ Bool))
  ) :fndef_axioms None :mask_spec None :item_kind (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks
   true :inline false :hidden () :broadcast_forall true :no_auto_trigger false :custom_req_err None :autospec None :bit_vector
   false :atomic false :integer_ring false :is_decrease_by false :check_recommends false :nonlinear false :spinoff_prover false
   :memoize false :rlimit None :print_zero_args false :print_as_method false :prophecy_dependent false :size_of_broadcast_proof
   false
  ) :body None :extra_dependencies ()))

(@ "vstd/std_specs/num.rs:173:1: 173:70 (#0)" (Function
  :name (Fun :path "core!num.impl&%8.checked_add.") :proxy (@ "vstd/std_specs/num.rs:173:1: 173:70 (#0)" "vstd!std_specs.num.ex_u32_checked_add.")
  :kind (FunctionKind Static) :visibility (Visibility :restricted_to None) :owning_module "vstd!std_specs.num." :mode Exec
  :fuel 1 :typ_params () :typ_bounds () :params (
   (@ "vstd/std_specs/num.rs:173:27: 173:35 (#0)" (Param :name (VarIdent "lhs" (VarIdentDisambiguate VirParam)) :typ (Typ Int (
       IntRange U 32)
     ) :mode Exec :is_mut false :unwrapped_info None))
   (@ "vstd/std_specs/num.rs:173:37: 173:45 (#0)" (Param :name (VarIdent "rhs" (VarIdentDisambiguate VirParam)) :typ (Typ Int (
       IntRange U 32)
     ) :mode Exec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/std_specs/num.rs:173:59: 173:70 (#0)" (Param :name (VarIdent "result" (VarIdentDisambiguate VirParam)) :typ
    (Typ Datatype "core!option.Option." ((Typ Int (IntRange U 32))) ()) :mode Exec :is_mut false :unwrapped_info None)
  ) :require () :ensure (
   (@@ "vstd/std_specs/num.rs:175:9: 175:50 (#0)" (> Binary (BinaryOp Implies) (@@ "vstd/std_specs/num.rs:175:9: 175:29 (#0)" (
       > Binary (BinaryOp Inequality (InequalityOp Gt)) (@@ "vstd/std_specs/num.rs:175:9: 175:18 (#0)" (> Binary (BinaryOp Arith (ArithOp
           Add
          ) Spec
         ) (@@ "vstd/std_specs/num.rs:175:9: 175:12 (#0)" (> Var (VarIdent "lhs" (VarIdentDisambiguate VirParam))) (Typ Int (IntRange
            U 32))
         ) (@@ "vstd/std_specs/num.rs:175:15: 175:18 (#0)" (> Var (VarIdent "rhs" (VarIdentDisambiguate VirParam))) (Typ Int (IntRange
            U 32)))
        ) (Typ Int (IntRange Int))
       ) (@@ "vstd/std_specs/num.rs:175:21: 175:29 (#0)" (> Const (Constant Int 4294967295)) (Typ Int (IntRange U 32)))
      ) (Typ Bool)
     ) (@@ "vstd/std_specs/num.rs:175:34: 175:50 (#0)" (> UnaryOpr (UnaryOpr Unbox (Typ Bool)) (@@ "vstd/std_specs/num.rs:175:34: 175:50 (#0)"
        (> Call (CallTarget Fun (CallTargetKind DynamicResolved :resolved (Fun :path "vstd!std_specs.option.impl&%0.is_None.") :typs
           ((Typ Int (IntRange U 32))) :impl_paths () :is_trait_default false
          ) (Fun :path "vstd!std_specs.option.OptionAdditionalFns.is_None.") ((Typ Datatype "core!option.Option." ((Typ Int (IntRange U
               32))
            ) ()
           ) (Typ Int (IntRange U 32))
          ) ((ImplPath TraitImplPath "vstd!std_specs.option.impl&%0.")) (AutospecUsage Final)
         ) ((@@ "vstd/std_specs/num.rs:175:34: 175:40 (#0)" (> UnaryOpr (UnaryOpr Box (Typ Datatype "core!option.Option." ((Typ Int (IntRange
                 U 32))
              ) ())
            ) (@@ "vstd/std_specs/num.rs:175:34: 175:40 (#0)" (> Var (VarIdent "result" (VarIdentDisambiguate VirParam))) (Typ Datatype
              "core!option.Option." ((Typ Int (IntRange U 32))) ()))
           ) (Typ Boxed (Typ Datatype "core!option.Option." ((Typ Int (IntRange U 32))) ()))))
        ) (Typ Boxed (Typ Bool)))
      ) (Typ Bool))
    ) (Typ Bool))
   (@@ "vstd/std_specs/num.rs:176:9: 176:69 (#0)" (> Binary (BinaryOp Implies) (@@ "vstd/std_specs/num.rs:176:9: 176:30 (#0)" (
       > Binary (BinaryOp Inequality (InequalityOp Le)) (@@ "vstd/std_specs/num.rs:176:9: 176:18 (#0)" (> Binary (BinaryOp Arith (ArithOp
           Add
          ) Spec
         ) (@@ "vstd/std_specs/num.rs:176:9: 176:12 (#0)" (> Var (VarIdent "lhs" (VarIdentDisambiguate VirParam))) (Typ Int (IntRange
            U 32))
         ) (@@ "vstd/std_specs/num.rs:176:15: 176:18 (#0)" (> Var (VarIdent "rhs" (VarIdentDisambiguate VirParam))) (Typ Int (IntRange
            U 32)))
        ) (Typ Int (IntRange Int))
       ) (@@ "vstd/std_specs/num.rs:176:22: 176:30 (#0)" (> Const (Constant Int 4294967295)) (Typ Int (IntRange U 32)))
      ) (Typ Bool)
     ) (@@ "vstd/std_specs/num.rs:176:35: 176:69 (#0)" (> Binary (BinaryOp Eq Spec) (@@ "vstd/std_specs/num.rs:176:35: 176:41 (#0)"
        (> Var (VarIdent "result" (VarIdentDisambiguate VirParam))) (Typ Datatype "core!option.Option." ((Typ Int (IntRange U 32)))
         ())
       ) (@@ "vstd/std_specs/num.rs:176:45: 176:69 (#0)" (> Ctor "core!option.Option." "Some" ((-> 0 (@@ "vstd/std_specs/num.rs:176:50: 176:61 (#0)"
            (> UnaryOpr (UnaryOpr Box (Typ Int (IntRange U 32))) (@@ "vstd/std_specs/num.rs:176:50: 176:61 (#0)" (> Unary (UnaryOp Clip :range
                (IntRange U 32) :truncate false
               ) (@@ "vstd/std_specs/num.rs:176:50: 176:61 (#0)" (> Binary (BinaryOp Arith (ArithOp Add) Spec) (@@ "vstd/std_specs/num.rs:176:51: 176:54 (#0)"
                  (> Var (VarIdent "lhs" (VarIdentDisambiguate VirParam))) (Typ Int (IntRange U 32))
                 ) (@@ "vstd/std_specs/num.rs:176:57: 176:60 (#0)" (> Var (VarIdent "rhs" (VarIdentDisambiguate VirParam))) (Typ Int (IntRange
                    U 32)))
                ) (Typ Int (IntRange Int)))
              ) (Typ Int (IntRange U 32)))
            ) (Typ Boxed (Typ Int (IntRange U 32)))))
         ) None
        ) (Typ Datatype "core!option.Option." ((Typ Int (IntRange U 32))) ()))
      ) (Typ Bool))
    ) (Typ Bool))
  ) :decrease () :decrease_when None :decrease_by None :broadcast_forall None :fndef_axioms None :mask_spec None :item_kind
  (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks true :inline false :hidden () :broadcast_forall
   false :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by
   false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method
   true :prophecy_dependent false :size_of_broadcast_proof false
  ) :body None :extra_dependencies ()))

(@ "vstd/std_specs/option.rs:13:10: 13:36 (#0)" (Function
  :name (Fun :path "vstd!std_specs.option.OptionAdditionalFns.is_Some.") :proxy None :kind (FunctionKind TraitMethodDecl :trait_path
   "vstd!std_specs.option.OptionAdditionalFns."
  ) :visibility (Visibility :restricted_to None) :owning_module "vstd!std_specs.option." :mode Spec :fuel 1 :typ_params (
   "Self%"
   "T"
  ) :typ_bounds (
   (GenericBound Trait "vstd!std_specs.option.OptionAdditionalFns." ((Typ TypParam "Self%") (Typ TypParam "T")))
  ) :params (
   (@ "vstd/std_specs/option.rs:13:21: 13:26 (#0)" (Param :name (VarIdent "self" (VarIdentDisambiguate VirParam)) :typ (Typ Decorate
      (TypDecoration Ref) None (Typ TypParam "Self%")
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/std_specs/option.rs:13:31: 13:35 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ
    (Typ Boxed (Typ Bool)) :mode Spec :is_mut false :unwrapped_info None)
  ) :require () :ensure () :decrease () :decrease_when None :decrease_by None :broadcast_forall None :fndef_axioms None :mask_spec
  None :item_kind (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks true :inline false :hidden () :broadcast_forall
   false :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by
   false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method
   true :prophecy_dependent false :size_of_broadcast_proof false
  ) :body None :extra_dependencies ()))

(@ "vstd/std_specs/option.rs:16:10: 16:36 (#0)" (Function
  :name (Fun :path "vstd!std_specs.option.OptionAdditionalFns.get_Some_0.") :proxy None :kind (FunctionKind TraitMethodDecl
   :trait_path "vstd!std_specs.option.OptionAdditionalFns."
  ) :visibility (Visibility :restricted_to None) :owning_module "vstd!std_specs.option." :mode Spec :fuel 1 :typ_params (
   "Self%"
   "T"
  ) :typ_bounds (
   (GenericBound Trait "vstd!std_specs.option.OptionAdditionalFns." ((Typ TypParam "Self%") (Typ TypParam "T")))
  ) :params (
   (@ "vstd/std_specs/option.rs:16:24: 16:29 (#0)" (Param :name (VarIdent "self" (VarIdentDisambiguate VirParam)) :typ (Typ Decorate
      (TypDecoration Ref) None (Typ TypParam "Self%")
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/std_specs/option.rs:16:34: 16:35 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ
    (Typ TypParam "T") :mode Spec :is_mut false :unwrapped_info None)
  ) :require () :ensure () :decrease () :decrease_when None :decrease_by None :broadcast_forall None :fndef_axioms None :mask_spec
  None :item_kind (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks true :inline false :hidden () :broadcast_forall
   false :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by
   false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method
   true :prophecy_dependent false :size_of_broadcast_proof false
  ) :body None :extra_dependencies ()))

(@ "vstd/std_specs/option.rs:19:10: 19:36 (#0)" (Function
  :name (Fun :path "vstd!std_specs.option.OptionAdditionalFns.is_None.") :proxy None :kind (FunctionKind TraitMethodDecl :trait_path
   "vstd!std_specs.option.OptionAdditionalFns."
  ) :visibility (Visibility :restricted_to None) :owning_module "vstd!std_specs.option." :mode Spec :fuel 1 :typ_params (
   "Self%"
   "T"
  ) :typ_bounds (
   (GenericBound Trait "vstd!std_specs.option.OptionAdditionalFns." ((Typ TypParam "Self%") (Typ TypParam "T")))
  ) :params (
   (@ "vstd/std_specs/option.rs:19:21: 19:26 (#0)" (Param :name (VarIdent "self" (VarIdentDisambiguate VirParam)) :typ (Typ Decorate
      (TypDecoration Ref) None (Typ TypParam "Self%")
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/std_specs/option.rs:19:31: 19:35 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ
    (Typ Boxed (Typ Bool)) :mode Spec :is_mut false :unwrapped_info None)
  ) :require () :ensure () :decrease () :decrease_when None :decrease_by None :broadcast_forall None :fndef_axioms None :mask_spec
  None :item_kind (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks true :inline false :hidden () :broadcast_forall
   false :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by
   false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method
   true :prophecy_dependent false :size_of_broadcast_proof false
  ) :body None :extra_dependencies ()))

(@ "vstd/std_specs/option.rs:44:15: 44:40 (#0)" (Function
  :name (Fun :path "vstd!std_specs.option.impl&%0.is_Some.") :proxy None :kind (FunctionKind TraitMethodImpl :method (Fun :path
    "vstd!std_specs.option.OptionAdditionalFns.is_Some."
   ) :impl_path "vstd!std_specs.option.impl&%0." :trait_path "vstd!std_specs.option.OptionAdditionalFns." :trait_typ_args ((Typ
     Datatype "core!option.Option." ((Typ TypParam "T")) ()
    ) (Typ TypParam "T")
   ) :inherit_body_from None
  ) :visibility (Visibility :restricted_to None) :owning_module "vstd!std_specs.option." :mode Spec :fuel 1 :typ_params (
   "T"
  ) :typ_bounds () :params (
   (@ "vstd/std_specs/option.rs:44:26: 44:31 (#0)" (Param :name (VarIdent "self" (VarIdentDisambiguate VirParam)) :typ (Typ Decorate
      (TypDecoration Ref) None (Typ Boxed (Typ Datatype "core!option.Option." ((Typ TypParam "T")) ()))
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/std_specs/option.rs:44:36: 44:40 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ
    (Typ Boxed (Typ Bool)) :mode Spec :is_mut false :unwrapped_info None)
  ) :require () :ensure () :decrease () :decrease_when None :decrease_by None :broadcast_forall None :fndef_axioms None :mask_spec
  None :item_kind (ItemKind Function) :publish true :attrs (FunctionAttrs :uses_ghost_blocks true :inline true :hidden () :broadcast_forall
   false :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by
   false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method
   true :prophecy_dependent false :size_of_broadcast_proof false
  ) :body (@@ "vstd/std_specs/option.rs:44:41: 46:6 (#0)" (> UnaryOpr (UnaryOpr Box (Typ Bool)) (@@ "vstd/std_specs/option.rs:44:41: 46:6 (#0)"
     (> Block () (@@ "vstd/std_specs/option.rs:45:9: 45:33 (#0)" (> UnaryOpr (UnaryOpr IsVariant :datatype "core!option.Option." :variant
         "Some"
        ) (@@ "vstd/std_specs/option.rs:45:20: 45:24 (#0)" (> UnaryOpr (UnaryOpr Unbox (Typ Datatype "core!option.Option." ((Typ TypParam
              "T")
            ) ())
          ) (@@ "vstd/std_specs/option.rs:45:20: 45:24 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Decorate
            (TypDecoration Ref) None (Typ Boxed (Typ Datatype "core!option.Option." ((Typ TypParam "T")) ()))))
         ) (Typ Datatype "core!option.Option." ((Typ TypParam "T")) ()))
       ) (Typ Bool))
     ) (Typ Bool))
   ) (Typ Boxed (Typ Bool))
  ) :extra_dependencies ()))

(@ "vstd/std_specs/option.rs:49:15: 49:40 (#0)" (Function
  :name (Fun :path "vstd!std_specs.option.impl&%0.get_Some_0.") :proxy None :kind (FunctionKind TraitMethodImpl :method (Fun
    :path "vstd!std_specs.option.OptionAdditionalFns.get_Some_0."
   ) :impl_path "vstd!std_specs.option.impl&%0." :trait_path "vstd!std_specs.option.OptionAdditionalFns." :trait_typ_args ((Typ
     Datatype "core!option.Option." ((Typ TypParam "T")) ()
    ) (Typ TypParam "T")
   ) :inherit_body_from None
  ) :visibility (Visibility :restricted_to None) :owning_module "vstd!std_specs.option." :mode Spec :fuel 1 :typ_params (
   "T"
  ) :typ_bounds () :params (
   (@ "vstd/std_specs/option.rs:49:29: 49:34 (#0)" (Param :name (VarIdent "self" (VarIdentDisambiguate VirParam)) :typ (Typ Decorate
      (TypDecoration Ref) None (Typ Boxed (Typ Datatype "core!option.Option." ((Typ TypParam "T")) ()))
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/std_specs/option.rs:49:39: 49:40 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ
    (Typ TypParam "T") :mode Spec :is_mut false :unwrapped_info None)
  ) :require () :ensure () :decrease () :decrease_when None :decrease_by None :broadcast_forall None :fndef_axioms None :mask_spec
  None :item_kind (ItemKind Function) :publish true :attrs (FunctionAttrs :uses_ghost_blocks true :inline true :hidden () :broadcast_forall
   false :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by
   false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method
   true :prophecy_dependent false :size_of_broadcast_proof false
  ) :body (@@ "vstd/std_specs/option.rs:49:41: 51:6 (#0)" (> Block () (@@ "vstd/std_specs/option.rs:50:9: 50:45 (#0)" (> UnaryOpr
      (UnaryOpr Field (FieldOpr :datatype "core!option.Option." :variant "Some" :field "0" :get_variant true :check (VariantCheck
         None))
      ) (@@ "vstd/std_specs/option.rs:50:27: 50:31 (#0)" (> UnaryOpr (UnaryOpr Unbox (Typ Datatype "core!option.Option." ((Typ TypParam
            "T")
          ) ())
        ) (@@ "vstd/std_specs/option.rs:50:27: 50:31 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Decorate
          (TypDecoration Ref) None (Typ Boxed (Typ Datatype "core!option.Option." ((Typ TypParam "T")) ()))))
       ) (Typ Datatype "core!option.Option." ((Typ TypParam "T")) ()))
     ) (Typ TypParam "T"))
   ) (Typ TypParam "T")
  ) :extra_dependencies ()))

(@ "vstd/std_specs/option.rs:54:15: 54:40 (#0)" (Function
  :name (Fun :path "vstd!std_specs.option.impl&%0.is_None.") :proxy None :kind (FunctionKind TraitMethodImpl :method (Fun :path
    "vstd!std_specs.option.OptionAdditionalFns.is_None."
   ) :impl_path "vstd!std_specs.option.impl&%0." :trait_path "vstd!std_specs.option.OptionAdditionalFns." :trait_typ_args ((Typ
     Datatype "core!option.Option." ((Typ TypParam "T")) ()
    ) (Typ TypParam "T")
   ) :inherit_body_from None
  ) :visibility (Visibility :restricted_to None) :owning_module "vstd!std_specs.option." :mode Spec :fuel 1 :typ_params (
   "T"
  ) :typ_bounds () :params (
   (@ "vstd/std_specs/option.rs:54:26: 54:31 (#0)" (Param :name (VarIdent "self" (VarIdentDisambiguate VirParam)) :typ (Typ Decorate
      (TypDecoration Ref) None (Typ Boxed (Typ Datatype "core!option.Option." ((Typ TypParam "T")) ()))
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/std_specs/option.rs:54:36: 54:40 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ
    (Typ Boxed (Typ Bool)) :mode Spec :is_mut false :unwrapped_info None)
  ) :require () :ensure () :decrease () :decrease_when None :decrease_by None :broadcast_forall None :fndef_axioms None :mask_spec
  None :item_kind (ItemKind Function) :publish true :attrs (FunctionAttrs :uses_ghost_blocks true :inline true :hidden () :broadcast_forall
   false :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by
   false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method
   true :prophecy_dependent false :size_of_broadcast_proof false
  ) :body (@@ "vstd/std_specs/option.rs:54:41: 56:6 (#0)" (> UnaryOpr (UnaryOpr Box (Typ Bool)) (@@ "vstd/std_specs/option.rs:54:41: 56:6 (#0)"
     (> Block () (@@ "vstd/std_specs/option.rs:55:9: 55:33 (#0)" (> UnaryOpr (UnaryOpr IsVariant :datatype "core!option.Option." :variant
         "None"
        ) (@@ "vstd/std_specs/option.rs:55:20: 55:24 (#0)" (> UnaryOpr (UnaryOpr Unbox (Typ Datatype "core!option.Option." ((Typ TypParam
              "T")
            ) ())
          ) (@@ "vstd/std_specs/option.rs:55:20: 55:24 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Decorate
            (TypDecoration Ref) None (Typ Boxed (Typ Datatype "core!option.Option." ((Typ TypParam "T")) ()))))
         ) (Typ Datatype "core!option.Option." ((Typ TypParam "T")) ()))
       ) (Typ Bool))
     ) (Typ Bool))
   ) (Typ Boxed (Typ Bool))
  ) :extra_dependencies ()))

(@ "vstd/std_specs/option.rs:86:1: 86:56 (#0)" (Function
  :name (Fun :path "vstd!std_specs.option.is_some.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to
   None
  ) :owning_module "vstd!std_specs.option." :mode Spec :fuel 1 :typ_params (
   "T"
  ) :typ_bounds () :params (
   (@ "vstd/std_specs/option.rs:86:29: 86:47 (#0)" (Param :name (VarIdent "option" (VarIdentDisambiguate VirParam)) :typ (Typ Decorate
      (TypDecoration Ref) None (Typ Boxed (Typ Datatype "core!option.Option." ((Typ TypParam "T")) ()))
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/std_specs/option.rs:86:52: 86:56 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ
    (Typ Bool) :mode Spec :is_mut false :unwrapped_info None)
  ) :require () :ensure () :decrease () :decrease_when None :decrease_by None :broadcast_forall None :fndef_axioms None :mask_spec
  None :item_kind (ItemKind Function) :publish true :attrs (FunctionAttrs :uses_ghost_blocks true :inline true :hidden () :broadcast_forall
   false :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by
   false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method
   false :prophecy_dependent false :size_of_broadcast_proof false
  ) :body (@@ "vstd/std_specs/option.rs:86:57: 88:2 (#0)" (> Block () (@@ "vstd/std_specs/option.rs:87:5: 87:31 (#0)" (> UnaryOpr
      (UnaryOpr IsVariant :datatype "core!option.Option." :variant "Some") (@@ "vstd/std_specs/option.rs:87:16: 87:22 (#0)" (> UnaryOpr
        (UnaryOpr Unbox (Typ Datatype "core!option.Option." ((Typ TypParam "T")) ())) (@@ "vstd/std_specs/option.rs:87:16: 87:22 (#0)"
         (> Var (VarIdent "option" (VarIdentDisambiguate VirParam))) (Typ Decorate (TypDecoration Ref) None (Typ Boxed (Typ Datatype
            "core!option.Option." ((Typ TypParam "T")) ()))))
       ) (Typ Datatype "core!option.Option." ((Typ TypParam "T")) ()))
     ) (Typ Bool))
   ) (Typ Bool)
  ) :extra_dependencies ()))

(@ "vstd/std_specs/option.rs:101:1: 101:56 (#0)" (Function
  :name (Fun :path "vstd!std_specs.option.is_none.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to
   None
  ) :owning_module "vstd!std_specs.option." :mode Spec :fuel 1 :typ_params (
   "T"
  ) :typ_bounds () :params (
   (@ "vstd/std_specs/option.rs:101:29: 101:47 (#0)" (Param :name (VarIdent "option" (VarIdentDisambiguate VirParam)) :typ (Typ
      Decorate (TypDecoration Ref) None (Typ Boxed (Typ Datatype "core!option.Option." ((Typ TypParam "T")) ()))
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/std_specs/option.rs:101:52: 101:56 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam))
    :typ (Typ Bool) :mode Spec :is_mut false :unwrapped_info None)
  ) :require () :ensure () :decrease () :decrease_when None :decrease_by None :broadcast_forall None :fndef_axioms None :mask_spec
  None :item_kind (ItemKind Function) :publish true :attrs (FunctionAttrs :uses_ghost_blocks true :inline true :hidden () :broadcast_forall
   false :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by
   false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method
   false :prophecy_dependent false :size_of_broadcast_proof false
  ) :body (@@ "vstd/std_specs/option.rs:101:57: 103:2 (#0)" (> Block () (@@ "vstd/std_specs/option.rs:102:5: 102:31 (#0)" (> UnaryOpr
      (UnaryOpr IsVariant :datatype "core!option.Option." :variant "None") (@@ "vstd/std_specs/option.rs:102:16: 102:22 (#0)" (>
        UnaryOpr (UnaryOpr Unbox (Typ Datatype "core!option.Option." ((Typ TypParam "T")) ())) (@@ "vstd/std_specs/option.rs:102:16: 102:22 (#0)"
         (> Var (VarIdent "option" (VarIdentDisambiguate VirParam))) (Typ Decorate (TypDecoration Ref) None (Typ Boxed (Typ Datatype
            "core!option.Option." ((Typ TypParam "T")) ()))))
       ) (Typ Datatype "core!option.Option." ((Typ TypParam "T")) ()))
     ) (Typ Bool))
   ) (Typ Bool)
  ) :extra_dependencies ()))

(@ "vstd/std_specs/option.rs:126:1: 126:56 (#0)" (Function
  :name (Fun :path "vstd!std_specs.option.spec_unwrap.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to
   None
  ) :owning_module "vstd!std_specs.option." :mode Spec :fuel 1 :typ_params (
   "T"
  ) :typ_bounds () :params (
   (@ "vstd/std_specs/option.rs:126:33: 126:50 (#0)" (Param :name (VarIdent "option" (VarIdentDisambiguate VirParam)) :typ (Typ
      Boxed (Typ Datatype "core!option.Option." ((Typ TypParam "T")) ())
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/std_specs/option.rs:126:55: 126:56 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam))
    :typ (Typ TypParam "T") :mode Spec :is_mut false :unwrapped_info None)
  ) :require (
   (@@ "vstd/std_specs/option.rs:128:9: 128:25 (#0)" (> UnaryOpr (UnaryOpr Unbox (Typ Bool)) (@@ "vstd/std_specs/option.rs:128:9: 128:25 (#0)"
      (> Call (CallTarget Fun (CallTargetKind DynamicResolved :resolved (Fun :path "vstd!std_specs.option.impl&%0.is_Some.") :typs
         ((Typ TypParam "T")) :impl_paths () :is_trait_default false
        ) (Fun :path "vstd!std_specs.option.OptionAdditionalFns.is_Some.") ((Typ Datatype "core!option.Option." ((Typ TypParam "T"))
          ()
         ) (Typ TypParam "T")
        ) ((ImplPath TraitImplPath "vstd!std_specs.option.impl&%0.")) (AutospecUsage Final)
       ) ((@@ "vstd/std_specs/option.rs:128:9: 128:15 (#0)" (> Var (VarIdent "option" (VarIdentDisambiguate VirParam))) (Typ Boxed
          (Typ Datatype "core!option.Option." ((Typ TypParam "T")) ()))))
      ) (Typ Boxed (Typ Bool)))
    ) (Typ Bool))
  ) :ensure () :decrease () :decrease_when None :decrease_by None :broadcast_forall None :fndef_axioms None :mask_spec None
  :item_kind (ItemKind Function) :publish true :attrs (FunctionAttrs :uses_ghost_blocks true :inline true :hidden () :broadcast_forall
   false :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by
   false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method
   false :prophecy_dependent false :size_of_broadcast_proof false
  ) :body (@@ "vstd/std_specs/option.rs:129:1: 131:2 (#0)" (> Block () (@@ "vstd/std_specs/option.rs:130:5: 130:24 (#0)" (> Call
      (CallTarget Fun (CallTargetKind DynamicResolved :resolved (Fun :path "vstd!std_specs.option.impl&%0.get_Some_0.") :typs ((Typ
          TypParam "T")
        ) :impl_paths () :is_trait_default false
       ) (Fun :path "vstd!std_specs.option.OptionAdditionalFns.get_Some_0.") ((Typ Datatype "core!option.Option." ((Typ TypParam "T"))
         ()
        ) (Typ TypParam "T")
       ) ((ImplPath TraitImplPath "vstd!std_specs.option.impl&%0.")) (AutospecUsage Final)
      ) ((@@ "vstd/std_specs/option.rs:130:5: 130:11 (#0)" (> Var (VarIdent "option" (VarIdentDisambiguate VirParam))) (Typ Boxed
         (Typ Datatype "core!option.Option." ((Typ TypParam "T")) ()))))
     ) (Typ TypParam "T"))
   ) (Typ TypParam "T")
  ) :extra_dependencies ()))

(@ "063-fibfib.rs:5:6: 5:35 (#0)" (Function
  :name (Fun :path "063_fibfib!spec_fibfib.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to
   "063_fibfib!."
  ) :owning_module "063_fibfib!." :mode Spec :fuel 1 :typ_params () :typ_bounds () :params (
   (@ "063-fibfib.rs:5:21: 5:27 (#0)" (Param :name (VarIdent "n" (VarIdentDisambiguate VirParam)) :typ (Typ Boxed (Typ Int (IntRange
        Nat))
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "063-fibfib.rs:5:32: 5:35 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ (Typ Int (IntRange
      Nat)
    ) :mode Spec :is_mut false :unwrapped_info None)
  ) :require () :ensure () :decrease ((@@ "063-fibfib.rs:6:15: 6:16 (#0)" (> UnaryOpr (UnaryOpr Unbox (Typ Int (IntRange Nat)))
     (@@ "063-fibfib.rs:6:15: 6:16 (#0)" (> Var (VarIdent "n" (VarIdentDisambiguate VirParam))) (Typ Boxed (Typ Int (IntRange Nat))))
    ) (Typ Int (IntRange Nat)))
  ) :decrease_when None :decrease_by None :broadcast_forall None :fndef_axioms None :mask_spec None :item_kind (ItemKind Function)
  :publish None :attrs (FunctionAttrs :uses_ghost_blocks true :inline false :hidden () :broadcast_forall false :no_auto_trigger
   false :custom_req_err None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by false :check_recommends
   false :nonlinear false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method false :prophecy_dependent
   false :size_of_broadcast_proof false
  ) :body (@@ "063-fibfib.rs:7:1: 17:2 (#0)" (> Block () (@@ "063-fibfib.rs:8:5: 16:6 (#0)" (> If (@@ "063-fibfib.rs:8:8: 8:16 (#0)"
       (> Binary (BinaryOp Eq Spec) (@@ "063-fibfib.rs:8:9: 8:10 (#0)" (> UnaryOpr (UnaryOpr Unbox (Typ Int (IntRange Nat))) (@@ "063-fibfib.rs:8:9: 8:10 (#0)"
           (> Var (VarIdent "n" (VarIdentDisambiguate VirParam))) (Typ Boxed (Typ Int (IntRange Nat))))
         ) (Typ Int (IntRange Nat))
        ) (@@ "063-fibfib.rs:8:14: 8:15 (#0)" (> Const (Constant Int 0)) (Typ Int (IntRange Nat)))
       ) (Typ Bool)
      ) (@@ "063-fibfib.rs:8:17: 10:6 (#0)" (> Block () (@@ "063-fibfib.rs:9:9: 9:10 (#0)" (> Const (Constant Int 0)) (Typ Int (IntRange
           Nat)))
       ) (Typ Int (IntRange Nat))
      ) (@@ "063-fibfib.rs:10:12: 16:6 (#0)" (> If (@@ "063-fibfib.rs:10:15: 10:23 (#0)" (> Binary (BinaryOp Eq Spec) (@@ "063-fibfib.rs:10:16: 10:17 (#0)"
           (> UnaryOpr (UnaryOpr Unbox (Typ Int (IntRange Nat))) (@@ "063-fibfib.rs:10:16: 10:17 (#0)" (> Var (VarIdent "n" (VarIdentDisambiguate
                VirParam))
             ) (Typ Boxed (Typ Int (IntRange Nat))))
           ) (Typ Int (IntRange Nat))
          ) (@@ "063-fibfib.rs:10:21: 10:22 (#0)" (> Const (Constant Int 1)) (Typ Int (IntRange Nat)))
         ) (Typ Bool)
        ) (@@ "063-fibfib.rs:10:24: 12:6 (#0)" (> Block () (@@ "063-fibfib.rs:11:9: 11:10 (#0)" (> Const (Constant Int 0)) (Typ Int (
             IntRange Nat)))
         ) (Typ Int (IntRange Nat))
        ) (@@ "063-fibfib.rs:12:12: 16:6 (#0)" (> If (@@ "063-fibfib.rs:12:15: 12:23 (#0)" (> Binary (BinaryOp Eq Spec) (@@ "063-fibfib.rs:12:16: 12:17 (#0)"
             (> UnaryOpr (UnaryOpr Unbox (Typ Int (IntRange Nat))) (@@ "063-fibfib.rs:12:16: 12:17 (#0)" (> Var (VarIdent "n" (VarIdentDisambiguate
                  VirParam))
               ) (Typ Boxed (Typ Int (IntRange Nat))))
             ) (Typ Int (IntRange Nat))
            ) (@@ "063-fibfib.rs:12:21: 12:22 (#0)" (> Const (Constant Int 2)) (Typ Int (IntRange Nat)))
           ) (Typ Bool)
          ) (@@ "063-fibfib.rs:12:24: 14:6 (#0)" (> Block () (@@ "063-fibfib.rs:13:9: 13:10 (#0)" (> Const (Constant Int 1)) (Typ Int (
               IntRange Nat)))
           ) (Typ Int (IntRange Nat))
          ) (@@ "063-fibfib.rs:14:12: 16:6 (#0)" (> Block () (@@ "063-fibfib.rs:15:9: 15:96 (#0)" (> Unary (UnaryOp Clip :range (IntRange
                Nat
               ) :truncate true
              ) (@@ "063-fibfib.rs:15:9: 15:96 (#0)" (> Binary (BinaryOp Arith (ArithOp Add) Spec) (@@ "063-fibfib.rs:15:9: 15:66 (#0)" (>
                  Unary (UnaryOp Clip :range (IntRange Nat) :truncate true) (@@ "063-fibfib.rs:15:9: 15:66 (#0)" (> Binary (BinaryOp Arith (ArithOp
                      Add
                     ) Spec
                    ) (@@ "063-fibfib.rs:15:9: 15:36 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "063_fibfib!spec_fibfib.")
                       () () (AutospecUsage Final)
                      ) ((@@ "063-fibfib.rs:15:21: 15:28 (#0)" (> UnaryOpr (UnaryOpr Box (Typ Int (IntRange Nat))) (@@ "063-fibfib.rs:15:21: 15:28 (#0)"
                          (> Unary (UnaryOp Clip :range (IntRange Nat) :truncate true) (@@ "063-fibfib.rs:15:21: 15:28 (#0)" (> Binary (BinaryOp Arith
                              (ArithOp Sub) Spec
                             ) (@@ "063-fibfib.rs:15:22: 15:23 (#0)" (> UnaryOpr (UnaryOpr Unbox (Typ Int (IntRange Nat))) (@@ "063-fibfib.rs:15:22: 15:23 (#0)"
                                (> Var (VarIdent "n" (VarIdentDisambiguate VirParam))) (Typ Boxed (Typ Int (IntRange Nat))))
                              ) (Typ Int (IntRange Nat))
                             ) (@@ "063-fibfib.rs:15:26: 15:27 (#0)" (> Const (Constant Int 1)) (Typ Int (IntRange Nat)))
                            ) (Typ Int (IntRange Int)))
                          ) (Typ Int (IntRange Nat)))
                        ) (Typ Boxed (Typ Int (IntRange Nat)))))
                     ) (Typ Int (IntRange Nat))
                    ) (@@ "063-fibfib.rs:15:39: 15:66 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "063_fibfib!spec_fibfib.")
                       () () (AutospecUsage Final)
                      ) ((@@ "063-fibfib.rs:15:51: 15:58 (#0)" (> UnaryOpr (UnaryOpr Box (Typ Int (IntRange Nat))) (@@ "063-fibfib.rs:15:51: 15:58 (#0)"
                          (> Unary (UnaryOp Clip :range (IntRange Nat) :truncate true) (@@ "063-fibfib.rs:15:51: 15:58 (#0)" (> Binary (BinaryOp Arith
                              (ArithOp Sub) Spec
                             ) (@@ "063-fibfib.rs:15:52: 15:53 (#0)" (> UnaryOpr (UnaryOpr Unbox (Typ Int (IntRange Nat))) (@@ "063-fibfib.rs:15:52: 15:53 (#0)"
                                (> Var (VarIdent "n" (VarIdentDisambiguate VirParam))) (Typ Boxed (Typ Int (IntRange Nat))))
                              ) (Typ Int (IntRange Nat))
                             ) (@@ "063-fibfib.rs:15:56: 15:57 (#0)" (> Const (Constant Int 2)) (Typ Int (IntRange Nat)))
                            ) (Typ Int (IntRange Int)))
                          ) (Typ Int (IntRange Nat)))
                        ) (Typ Boxed (Typ Int (IntRange Nat)))))
                     ) (Typ Int (IntRange Nat)))
                   ) (Typ Int (IntRange Nat)))
                 ) (Typ Int (IntRange Nat))
                ) (@@ "063-fibfib.rs:15:69: 15:96 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "063_fibfib!spec_fibfib.")
                   () () (AutospecUsage Final)
                  ) ((@@ "063-fibfib.rs:15:81: 15:88 (#0)" (> UnaryOpr (UnaryOpr Box (Typ Int (IntRange Nat))) (@@ "063-fibfib.rs:15:81: 15:88 (#0)"
                      (> Unary (UnaryOp Clip :range (IntRange Nat) :truncate true) (@@ "063-fibfib.rs:15:81: 15:88 (#0)" (> Binary (BinaryOp Arith
                          (ArithOp Sub) Spec
                         ) (@@ "063-fibfib.rs:15:82: 15:83 (#0)" (> UnaryOpr (UnaryOpr Unbox (Typ Int (IntRange Nat))) (@@ "063-fibfib.rs:15:82: 15:83 (#0)"
                            (> Var (VarIdent "n" (VarIdentDisambiguate VirParam))) (Typ Boxed (Typ Int (IntRange Nat))))
                          ) (Typ Int (IntRange Nat))
                         ) (@@ "063-fibfib.rs:15:86: 15:87 (#0)" (> Const (Constant Int 3)) (Typ Int (IntRange Nat)))
                        ) (Typ Int (IntRange Int)))
                      ) (Typ Int (IntRange Nat)))
                    ) (Typ Boxed (Typ Int (IntRange Nat)))))
                 ) (Typ Int (IntRange Nat)))
               ) (Typ Int (IntRange Nat)))
             ) (Typ Int (IntRange Nat)))
           ) (Typ Int (IntRange Nat)))
         ) (Typ Int (IntRange Nat)))
       ) (Typ Int (IntRange Nat)))
     ) (Typ Int (IntRange Nat)))
   ) (Typ Int (IntRange Nat))
  ) :extra_dependencies ()))

(@ "063-fibfib.rs:19:1: 19:39 (#0)" (Function
  :name (Fun :path "063_fibfib!fibfib.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to "063_fibfib!.")
  :owning_module "063_fibfib!." :mode Exec :fuel 1 :typ_params () :typ_bounds () :params (
   (@ "063-fibfib.rs:19:11: 19:17 (#0)" (Param :name (VarIdent "x" (VarIdentDisambiguate VirParam)) :typ (Typ Int (IntRange U 32))
     :mode Exec :is_mut false :unwrapped_info None))
  ) :ret (@ "063-fibfib.rs:19:28: 19:39 (#0)" (Param :name (VarIdent "ret" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype
     "core!option.Option." ((Typ Int (IntRange U 32))) ()
    ) :mode Exec :is_mut false :unwrapped_info None)
  ) :require () :ensure (
   (@@ "063-fibfib.rs:22:9: 22:64 (#0)" (> Binary (BinaryOp Implies) (@@ "063-fibfib.rs:22:9: 22:22 (#0)" (> Call (CallTarget Fun
        (CallTargetKind Static) (Fun :path "vstd!std_specs.option.is_some.") ((Typ Int (IntRange U 32))) () (AutospecUsage Final)
       ) ((@@ "063-fibfib.rs:22:9: 22:12 (#0)" (> UnaryOpr (UnaryOpr Box (Typ Datatype "core!option.Option." ((Typ Int (IntRange U 32)))
            ())
          ) (@@ "063-fibfib.rs:22:9: 22:12 (#0)" (> Var (VarIdent "ret" (VarIdentDisambiguate VirParam))) (Typ Datatype "core!option.Option."
            ((Typ Int (IntRange U 32))) ()))
         ) (Typ Boxed (Typ Datatype "core!option.Option." ((Typ Int (IntRange U 32))) ()))))
      ) (Typ Bool)
     ) (@@ "063-fibfib.rs:22:27: 22:64 (#0)" (> Binary (BinaryOp Eq Spec) (@@ "063-fibfib.rs:22:27: 22:48 (#0)" (> Call (CallTarget
          Fun (CallTargetKind Static) (Fun :path "063_fibfib!spec_fibfib.") () () (AutospecUsage Final)
         ) ((@@ "063-fibfib.rs:22:39: 22:40 (#0)" (> UnaryOpr (UnaryOpr Box (Typ Int (IntRange U 32))) (@@ "063-fibfib.rs:22:39: 22:40 (#0)"
             (> Var (VarIdent "x" (VarIdentDisambiguate VirParam))) (Typ Int (IntRange U 32)))
           ) (Typ Boxed (Typ Int (IntRange U 32)))))
        ) (Typ Int (IntRange Nat))
       ) (@@ "063-fibfib.rs:22:52: 22:64 (#0)" (> UnaryOpr (UnaryOpr Unbox (Typ Int (IntRange U 32))) (@@ "063-fibfib.rs:22:52: 22:64 (#0)"
          (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!std_specs.option.spec_unwrap.") ((Typ Int (IntRange U 32)))
            () (AutospecUsage Final)
           ) ((@@ "063-fibfib.rs:22:52: 22:55 (#0)" (> UnaryOpr (UnaryOpr Box (Typ Datatype "core!option.Option." ((Typ Int (IntRange U 32)))
                ())
              ) (@@ "063-fibfib.rs:22:52: 22:55 (#0)" (> Var (VarIdent "ret" (VarIdentDisambiguate VirParam))) (Typ Datatype "core!option.Option."
                ((Typ Int (IntRange U 32))) ()))
             ) (Typ Boxed (Typ Datatype "core!option.Option." ((Typ Int (IntRange U 32))) ()))))
          ) (Typ Boxed (Typ Int (IntRange U 32))))
        ) (Typ Int (IntRange U 32)))
      ) (Typ Bool))
    ) (Typ Bool))
  ) :decrease () :decrease_when None :decrease_by None :broadcast_forall None :fndef_axioms None :mask_spec None :item_kind
  (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks true :inline false :hidden () :broadcast_forall
   false :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by
   false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method
   false :prophecy_dependent false :size_of_broadcast_proof false
  ) :body (@@ "063-fibfib.rs:24:1: 33:2 (#0)" (> Block () (@@ "063-fibfib.rs:27:9: 27:10 (#0)" (> If (@@ "063-fibfib.rs:27:9: 27:10 (#0)"
       (> Binary (BinaryOp Eq Spec) (@@ "063-fibfib.rs:26:11: 26:14 (#0)" (> Var (VarIdent "x" (VarIdentDisambiguate VirParam))) (
          Typ Int (IntRange U 32))
        ) (@@ "063-fibfib.rs:27:9: 27:10 (#0)" (> Const (Constant Int 0)) (Typ Int (IntRange U 32)))
       ) (Typ Bool)
      ) (@@ "063-fibfib.rs:27:9: 27:10 (#0)" (> Block () (@@ "063-fibfib.rs:27:14: 27:21 (#0)" (> Ctor "core!option.Option." "Some"
          ((-> 0 (@@ "063-fibfib.rs:27:19: 27:20 (#0)" (> UnaryOpr (UnaryOpr Box (Typ Int (IntRange U 32))) (@@ "063-fibfib.rs:27:19: 27:20 (#0)"
               (> Const (Constant Int 0)) (Typ Int (IntRange U 32)))
             ) (Typ Boxed (Typ Int (IntRange U 32)))))
          ) None
         ) (Typ Datatype "core!option.Option." ((Typ Int (IntRange U 32))) ()))
       ) (Typ Datatype "core!option.Option." ((Typ Int (IntRange U 32))) ())
      ) (@@ "063-fibfib.rs:28:9: 28:10 (#0)" (> If (@@ "063-fibfib.rs:28:9: 28:10 (#0)" (> Binary (BinaryOp Eq Spec) (@@ "063-fibfib.rs:26:11: 26:14 (#0)"
           (> Var (VarIdent "x" (VarIdentDisambiguate VirParam))) (Typ Int (IntRange U 32))
          ) (@@ "063-fibfib.rs:28:9: 28:10 (#0)" (> Const (Constant Int 1)) (Typ Int (IntRange U 32)))
         ) (Typ Bool)
        ) (@@ "063-fibfib.rs:28:9: 28:10 (#0)" (> Block () (@@ "063-fibfib.rs:28:14: 28:21 (#0)" (> Ctor "core!option.Option." "Some"
            ((-> 0 (@@ "063-fibfib.rs:28:19: 28:20 (#0)" (> UnaryOpr (UnaryOpr Box (Typ Int (IntRange U 32))) (@@ "063-fibfib.rs:28:19: 28:20 (#0)"
                 (> Const (Constant Int 0)) (Typ Int (IntRange U 32)))
               ) (Typ Boxed (Typ Int (IntRange U 32)))))
            ) None
           ) (Typ Datatype "core!option.Option." ((Typ Int (IntRange U 32))) ()))
         ) (Typ Datatype "core!option.Option." ((Typ Int (IntRange U 32))) ())
        ) (@@ "063-fibfib.rs:29:9: 29:10 (#0)" (> If (@@ "063-fibfib.rs:29:9: 29:10 (#0)" (> Binary (BinaryOp Eq Spec) (@@ "063-fibfib.rs:26:11: 26:14 (#0)"
             (> Var (VarIdent "x" (VarIdentDisambiguate VirParam))) (Typ Int (IntRange U 32))
            ) (@@ "063-fibfib.rs:29:9: 29:10 (#0)" (> Const (Constant Int 2)) (Typ Int (IntRange U 32)))
           ) (Typ Bool)
          ) (@@ "063-fibfib.rs:29:9: 29:10 (#0)" (> Block () (@@ "063-fibfib.rs:29:14: 29:21 (#0)" (> Ctor "core!option.Option." "Some"
              ((-> 0 (@@ "063-fibfib.rs:29:19: 29:20 (#0)" (> UnaryOpr (UnaryOpr Box (Typ Int (IntRange U 32))) (@@ "063-fibfib.rs:29:19: 29:20 (#0)"
                   (> Const (Constant Int 1)) (Typ Int (IntRange U 32)))
                 ) (Typ Boxed (Typ Int (IntRange U 32)))))
              ) None
             ) (Typ Datatype "core!option.Option." ((Typ Int (IntRange U 32))) ()))
           ) (Typ Datatype "core!option.Option." ((Typ Int (IntRange U 32))) ())
          ) (@@ "063-fibfib.rs:30:9: 30:10 (#0)" (> Block () (@@ "063-fibfib.rs:30:14: 30:85 (#0)" (> Call (CallTarget Fun (CallTargetKind
                Static
               ) (Fun :path "core!num.impl&%8.checked_add.") () () (AutospecUsage Final)
              ) ((@@ "063-fibfib.rs:30:14: 30:57 (#0)" (> Block (
                  (@ "063-fibfib.rs:30:14: 30:57 (#15)" (Stmt Decl :pattern (@@ "063-fibfib.rs:30:14: 30:57 (#15)" (Pattern Var :name (VarIdent
                       "tmp%%" (VarIdentDisambiguate VirTemp 3)
                      ) :mutable false
                     ) (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible."
                          () ())
                        ) ()
                       ) (Typ Int (IntRange U 32))
                      ) ())
                    ) :mode Exec :init (@@ "063-fibfib.rs:30:14: 30:57 (#15)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "core!option.impl&%40.branch.")
                       ((Typ Int (IntRange U 32))) () (AutospecUsage Final)
                      ) ((@@ "063-fibfib.rs:30:14: 30:56 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "core!num.impl&%8.checked_add.")
                          () () (AutospecUsage Final)
                         ) ((@@ "063-fibfib.rs:30:14: 30:28 (#0)" (> Block (
                             (@ "063-fibfib.rs:30:14: 30:28 (#17)" (Stmt Decl :pattern (@@ "063-fibfib.rs:30:14: 30:28 (#17)" (Pattern Var :name (VarIdent
                                  "tmp%%" (VarIdentDisambiguate VirTemp 1)
                                 ) :mutable false
                                ) (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible."
                                     () ())
                                   ) ()
                                  ) (Typ Int (IntRange U 32))
                                 ) ())
                               ) :mode Exec :init (@@ "063-fibfib.rs:30:14: 30:28 (#17)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "core!option.impl&%40.branch.")
                                  ((Typ Int (IntRange U 32))) () (AutospecUsage Final)
                                 ) ((@@ "063-fibfib.rs:30:14: 30:27 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "063_fibfib!fibfib.") ()
                                     () (AutospecUsage Final)
                                    ) ((@@ "063-fibfib.rs:30:21: 30:26 (#0)" (> Unary (UnaryOp Clip :range (IntRange U 32) :truncate true) (@@ "063-fibfib.rs:30:21: 30:26 (#0)"
                                        (> Binary (BinaryOp Arith (ArithOp Sub) Exec) (@@ "063-fibfib.rs:30:21: 30:22 (#0)" (> Var (VarIdent "x" (VarIdentDisambiguate
                                             VirParam))
                                          ) (Typ Int (IntRange U 32))
                                         ) (@@ "063-fibfib.rs:30:25: 30:26 (#0)" (> Const (Constant Int 1)) (Typ Int (IntRange U 32)))
                                        ) (Typ Int (IntRange U 32)))
                                      ) (Typ Int (IntRange U 32))))
                                   ) (Typ Datatype "core!option.Option." ((Typ Int (IntRange U 32))) ())))
                                ) (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible."
                                     () ())
                                   ) ()
                                  ) (Typ Int (IntRange U 32))
                                 ) ()))))
                            ) (@@ "063-fibfib.rs:30:27: 30:28 (#18)" (> If (@@ "063-fibfib.rs:30:27: 30:28 (#18)" (> Binary (BinaryOp And) (@@ "063-fibfib.rs:30:27: 30:28 (#18)"
                                 (> UnaryOpr (UnaryOpr IsVariant :datatype "core!ops.control_flow.ControlFlow." :variant "Break") (@@ "063-fibfib.rs:30:14: 30:28 (#17)"
                                   (> Var (VarIdent "tmp%%" (VarIdentDisambiguate VirTemp 1))) (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype
                                      "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()
                                     ) (Typ Int (IntRange U 32))
                                    ) ()))
                                 ) (Typ Bool)
                                ) (@@ "063-fibfib.rs:30:27: 30:28 (#18)" (> Const (Constant Bool true)) (Typ Bool))
                               ) (Typ Bool)
                              ) (@@ "063-fibfib.rs:30:27: 30:28 (#18)" (> Block (
                                 (@ "063-fibfib.rs:30:27: 30:28 (#18)" (Stmt Decl :pattern (@@ "063-fibfib.rs:30:27: 30:28 (#18)" (Pattern Var :name (VarIdent
                                      "residual" (VarIdentDisambiguate RustcId 95)
                                     ) :mutable false
                                    ) (Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ())
                                   ) :mode Exec :init (@@ "063-fibfib.rs:30:27: 30:28 (#18)" (> UnaryOpr (UnaryOpr Unbox (Typ Datatype "core!option.Option." ((Typ
                                         Datatype "core!convert.Infallible." () ())
                                       ) ())
                                     ) (@@ "063-fibfib.rs:30:27: 30:28 (#18)" (> UnaryOpr (UnaryOpr Field (FieldOpr :datatype "core!ops.control_flow.ControlFlow."
                                         :variant "Break" :field "0" :get_variant false :check (VariantCheck None))
                                       ) (@@ "063-fibfib.rs:30:14: 30:28 (#17)" (> UnaryOpr (UnaryOpr Unbox (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype
                                             "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()
                                            ) (Typ Int (IntRange U 32))
                                           ) ())
                                         ) (@@ "063-fibfib.rs:30:14: 30:28 (#17)" (> UnaryOpr (UnaryOpr Box (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype
                                               "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()
                                              ) (Typ Int (IntRange U 32))
                                             ) ())
                                           ) (@@ "063-fibfib.rs:30:14: 30:28 (#17)" (> Var (VarIdent "tmp%%" (VarIdentDisambiguate VirTemp 1))) (Typ Datatype "core!ops.control_flow.ControlFlow."
                                             ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()) (Typ Int (IntRange U 32))) ()))
                                          ) (Typ Boxed (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible."
                                                () ())
                                              ) ()
                                             ) (Typ Int (IntRange U 32))
                                            ) ())))
                                        ) (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible."
                                             () ())
                                           ) ()
                                          ) (Typ Int (IntRange U 32))
                                         ) ()))
                                      ) (Typ Boxed (Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ())))
                                    ) (Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()))))
                                ) (@@ "063-fibfib.rs:30:27: 30:28 (#18)" (> Return (@@ "063-fibfib.rs:30:14: 30:28 (#17)" (> Call (CallTarget Fun (CallTargetKind
                                      Static
                                     ) (Fun :path "core!option.impl&%41.from_residual.") ((Typ Int (IntRange U 32))) () (AutospecUsage Final)
                                    ) ((@@ "063-fibfib.rs:30:27: 30:28 (#18)" (> Var (VarIdent "residual" (VarIdentDisambiguate RustcId 95))) (Typ Datatype "core!option.Option."
                                       ((Typ Datatype "core!convert.Infallible." () ())) ())))
                                   ) (Typ Datatype "core!option.Option." ((Typ Int (IntRange U 32))) ()))
                                 ) (Typ Decorate (TypDecoration Never) None (Typ Datatype "tuple%0." () ())))
                               ) (Typ Decorate (TypDecoration Never) None (Typ Datatype "tuple%0." () ()))
                              ) (@@ "063-fibfib.rs:30:14: 30:28 (#17)" (> Block (
                                 (@ "063-fibfib.rs:30:14: 30:28 (#17)" (Stmt Decl :pattern (@@ "063-fibfib.rs:30:14: 30:28 (#17)" (Pattern Var :name (VarIdent
                                      "val" (VarIdentDisambiguate RustcId 89)
                                     ) :mutable false
                                    ) (Typ Int (IntRange U 32))
                                   ) :mode Exec :init (@@ "063-fibfib.rs:30:14: 30:28 (#17)" (> UnaryOpr (UnaryOpr Unbox (Typ Int (IntRange U 32))) (@@ "063-fibfib.rs:30:14: 30:28 (#17)"
                                      (> UnaryOpr (UnaryOpr Field (FieldOpr :datatype "core!ops.control_flow.ControlFlow." :variant "Continue" :field "0" :get_variant
                                         false :check (VariantCheck None))
                                       ) (@@ "063-fibfib.rs:30:14: 30:28 (#17)" (> UnaryOpr (UnaryOpr Unbox (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype
                                             "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()
                                            ) (Typ Int (IntRange U 32))
                                           ) ())
                                         ) (@@ "063-fibfib.rs:30:14: 30:28 (#17)" (> UnaryOpr (UnaryOpr Box (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype
                                               "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()
                                              ) (Typ Int (IntRange U 32))
                                             ) ())
                                           ) (@@ "063-fibfib.rs:30:14: 30:28 (#17)" (> Var (VarIdent "tmp%%" (VarIdentDisambiguate VirTemp 1))) (Typ Datatype "core!ops.control_flow.ControlFlow."
                                             ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()) (Typ Int (IntRange U 32))) ()))
                                          ) (Typ Boxed (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible."
                                                () ())
                                              ) ()
                                             ) (Typ Int (IntRange U 32))
                                            ) ())))
                                        ) (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible."
                                             () ())
                                           ) ()
                                          ) (Typ Int (IntRange U 32))
                                         ) ()))
                                      ) (Typ Boxed (Typ Int (IntRange U 32))))
                                    ) (Typ Int (IntRange U 32)))))
                                ) (@@ "063-fibfib.rs:30:14: 30:28 (#0)" (> Var (VarIdent "val" (VarIdentDisambiguate RustcId 89))) (Typ Int (IntRange U 32)))
                               ) (Typ Int (IntRange U 32)))
                             ) (Typ Int (IntRange U 32)))
                           ) (Typ Int (IntRange U 32))
                          ) (@@ "063-fibfib.rs:30:41: 30:55 (#0)" (> Block (
                             (@ "063-fibfib.rs:30:41: 30:55 (#19)" (Stmt Decl :pattern (@@ "063-fibfib.rs:30:41: 30:55 (#19)" (Pattern Var :name (VarIdent
                                  "tmp%%" (VarIdentDisambiguate VirTemp 2)
                                 ) :mutable false
                                ) (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible."
                                     () ())
                                   ) ()
                                  ) (Typ Int (IntRange U 32))
                                 ) ())
                               ) :mode Exec :init (@@ "063-fibfib.rs:30:41: 30:55 (#19)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "core!option.impl&%40.branch.")
                                  ((Typ Int (IntRange U 32))) () (AutospecUsage Final)
                                 ) ((@@ "063-fibfib.rs:30:41: 30:54 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "063_fibfib!fibfib.") ()
                                     () (AutospecUsage Final)
                                    ) ((@@ "063-fibfib.rs:30:48: 30:53 (#0)" (> Unary (UnaryOp Clip :range (IntRange U 32) :truncate true) (@@ "063-fibfib.rs:30:48: 30:53 (#0)"
                                        (> Binary (BinaryOp Arith (ArithOp Sub) Exec) (@@ "063-fibfib.rs:30:48: 30:49 (#0)" (> Var (VarIdent "x" (VarIdentDisambiguate
                                             VirParam))
                                          ) (Typ Int (IntRange U 32))
                                         ) (@@ "063-fibfib.rs:30:52: 30:53 (#0)" (> Const (Constant Int 2)) (Typ Int (IntRange U 32)))
                                        ) (Typ Int (IntRange U 32)))
                                      ) (Typ Int (IntRange U 32))))
                                   ) (Typ Datatype "core!option.Option." ((Typ Int (IntRange U 32))) ())))
                                ) (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible."
                                     () ())
                                   ) ()
                                  ) (Typ Int (IntRange U 32))
                                 ) ()))))
                            ) (@@ "063-fibfib.rs:30:54: 30:55 (#20)" (> If (@@ "063-fibfib.rs:30:54: 30:55 (#20)" (> Binary (BinaryOp And) (@@ "063-fibfib.rs:30:54: 30:55 (#20)"
                                 (> UnaryOpr (UnaryOpr IsVariant :datatype "core!ops.control_flow.ControlFlow." :variant "Break") (@@ "063-fibfib.rs:30:41: 30:55 (#19)"
                                   (> Var (VarIdent "tmp%%" (VarIdentDisambiguate VirTemp 2))) (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype
                                      "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()
                                     ) (Typ Int (IntRange U 32))
                                    ) ()))
                                 ) (Typ Bool)
                                ) (@@ "063-fibfib.rs:30:54: 30:55 (#20)" (> Const (Constant Bool true)) (Typ Bool))
                               ) (Typ Bool)
                              ) (@@ "063-fibfib.rs:30:54: 30:55 (#20)" (> Block (
                                 (@ "063-fibfib.rs:30:54: 30:55 (#20)" (Stmt Decl :pattern (@@ "063-fibfib.rs:30:54: 30:55 (#20)" (Pattern Var :name (VarIdent
                                      "residual" (VarIdentDisambiguate RustcId 120)
                                     ) :mutable false
                                    ) (Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ())
                                   ) :mode Exec :init (@@ "063-fibfib.rs:30:54: 30:55 (#20)" (> UnaryOpr (UnaryOpr Unbox (Typ Datatype "core!option.Option." ((Typ
                                         Datatype "core!convert.Infallible." () ())
                                       ) ())
                                     ) (@@ "063-fibfib.rs:30:54: 30:55 (#20)" (> UnaryOpr (UnaryOpr Field (FieldOpr :datatype "core!ops.control_flow.ControlFlow."
                                         :variant "Break" :field "0" :get_variant false :check (VariantCheck None))
                                       ) (@@ "063-fibfib.rs:30:41: 30:55 (#19)" (> UnaryOpr (UnaryOpr Unbox (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype
                                             "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()
                                            ) (Typ Int (IntRange U 32))
                                           ) ())
                                         ) (@@ "063-fibfib.rs:30:41: 30:55 (#19)" (> UnaryOpr (UnaryOpr Box (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype
                                               "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()
                                              ) (Typ Int (IntRange U 32))
                                             ) ())
                                           ) (@@ "063-fibfib.rs:30:41: 30:55 (#19)" (> Var (VarIdent "tmp%%" (VarIdentDisambiguate VirTemp 2))) (Typ Datatype "core!ops.control_flow.ControlFlow."
                                             ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()) (Typ Int (IntRange U 32))) ()))
                                          ) (Typ Boxed (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible."
                                                () ())
                                              ) ()
                                             ) (Typ Int (IntRange U 32))
                                            ) ())))
                                        ) (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible."
                                             () ())
                                           ) ()
                                          ) (Typ Int (IntRange U 32))
                                         ) ()))
                                      ) (Typ Boxed (Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ())))
                                    ) (Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()))))
                                ) (@@ "063-fibfib.rs:30:54: 30:55 (#20)" (> Return (@@ "063-fibfib.rs:30:41: 30:55 (#19)" (> Call (CallTarget Fun (CallTargetKind
                                      Static
                                     ) (Fun :path "core!option.impl&%41.from_residual.") ((Typ Int (IntRange U 32))) () (AutospecUsage Final)
                                    ) ((@@ "063-fibfib.rs:30:54: 30:55 (#20)" (> Var (VarIdent "residual" (VarIdentDisambiguate RustcId 120))) (Typ Datatype "core!option.Option."
                                       ((Typ Datatype "core!convert.Infallible." () ())) ())))
                                   ) (Typ Datatype "core!option.Option." ((Typ Int (IntRange U 32))) ()))
                                 ) (Typ Decorate (TypDecoration Never) None (Typ Datatype "tuple%0." () ())))
                               ) (Typ Decorate (TypDecoration Never) None (Typ Datatype "tuple%0." () ()))
                              ) (@@ "063-fibfib.rs:30:41: 30:55 (#19)" (> Block (
                                 (@ "063-fibfib.rs:30:41: 30:55 (#19)" (Stmt Decl :pattern (@@ "063-fibfib.rs:30:41: 30:55 (#19)" (Pattern Var :name (VarIdent
                                      "val" (VarIdentDisambiguate RustcId 114)
                                     ) :mutable false
                                    ) (Typ Int (IntRange U 32))
                                   ) :mode Exec :init (@@ "063-fibfib.rs:30:41: 30:55 (#19)" (> UnaryOpr (UnaryOpr Unbox (Typ Int (IntRange U 32))) (@@ "063-fibfib.rs:30:41: 30:55 (#19)"
                                      (> UnaryOpr (UnaryOpr Field (FieldOpr :datatype "core!ops.control_flow.ControlFlow." :variant "Continue" :field "0" :get_variant
                                         false :check (VariantCheck None))
                                       ) (@@ "063-fibfib.rs:30:41: 30:55 (#19)" (> UnaryOpr (UnaryOpr Unbox (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype
                                             "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()
                                            ) (Typ Int (IntRange U 32))
                                           ) ())
                                         ) (@@ "063-fibfib.rs:30:41: 30:55 (#19)" (> UnaryOpr (UnaryOpr Box (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype
                                               "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()
                                              ) (Typ Int (IntRange U 32))
                                             ) ())
                                           ) (@@ "063-fibfib.rs:30:41: 30:55 (#19)" (> Var (VarIdent "tmp%%" (VarIdentDisambiguate VirTemp 2))) (Typ Datatype "core!ops.control_flow.ControlFlow."
                                             ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()) (Typ Int (IntRange U 32))) ()))
                                          ) (Typ Boxed (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible."
                                                () ())
                                              ) ()
                                             ) (Typ Int (IntRange U 32))
                                            ) ())))
                                        ) (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible."
                                             () ())
                                           ) ()
                                          ) (Typ Int (IntRange U 32))
                                         ) ()))
                                      ) (Typ Boxed (Typ Int (IntRange U 32))))
                                    ) (Typ Int (IntRange U 32)))))
                                ) (@@ "063-fibfib.rs:30:41: 30:55 (#0)" (> Var (VarIdent "val" (VarIdentDisambiguate RustcId 114))) (Typ Int (IntRange U 32)))
                               ) (Typ Int (IntRange U 32)))
                             ) (Typ Int (IntRange U 32)))
                           ) (Typ Int (IntRange U 32))))
                        ) (Typ Datatype "core!option.Option." ((Typ Int (IntRange U 32))) ())))
                     ) (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible."
                          () ())
                        ) ()
                       ) (Typ Int (IntRange U 32))
                      ) ()))))
                 ) (@@ "063-fibfib.rs:30:56: 30:57 (#16)" (> If (@@ "063-fibfib.rs:30:56: 30:57 (#16)" (> Binary (BinaryOp And) (@@ "063-fibfib.rs:30:56: 30:57 (#16)"
                      (> UnaryOpr (UnaryOpr IsVariant :datatype "core!ops.control_flow.ControlFlow." :variant "Break") (@@ "063-fibfib.rs:30:14: 30:57 (#15)"
                        (> Var (VarIdent "tmp%%" (VarIdentDisambiguate VirTemp 3))) (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype
                           "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()
                          ) (Typ Int (IntRange U 32))
                         ) ()))
                      ) (Typ Bool)
                     ) (@@ "063-fibfib.rs:30:56: 30:57 (#16)" (> Const (Constant Bool true)) (Typ Bool))
                    ) (Typ Bool)
                   ) (@@ "063-fibfib.rs:30:56: 30:57 (#16)" (> Block (
                      (@ "063-fibfib.rs:30:56: 30:57 (#16)" (Stmt Decl :pattern (@@ "063-fibfib.rs:30:56: 30:57 (#16)" (Pattern Var :name (VarIdent
                           "residual" (VarIdentDisambiguate RustcId 137)
                          ) :mutable false
                         ) (Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ())
                        ) :mode Exec :init (@@ "063-fibfib.rs:30:56: 30:57 (#16)" (> UnaryOpr (UnaryOpr Unbox (Typ Datatype "core!option.Option." ((Typ
                              Datatype "core!convert.Infallible." () ())
                            ) ())
                          ) (@@ "063-fibfib.rs:30:56: 30:57 (#16)" (> UnaryOpr (UnaryOpr Field (FieldOpr :datatype "core!ops.control_flow.ControlFlow."
                              :variant "Break" :field "0" :get_variant false :check (VariantCheck None))
                            ) (@@ "063-fibfib.rs:30:14: 30:57 (#15)" (> UnaryOpr (UnaryOpr Unbox (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype
                                  "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()
                                 ) (Typ Int (IntRange U 32))
                                ) ())
                              ) (@@ "063-fibfib.rs:30:14: 30:57 (#15)" (> UnaryOpr (UnaryOpr Box (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype
                                    "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()
                                   ) (Typ Int (IntRange U 32))
                                  ) ())
                                ) (@@ "063-fibfib.rs:30:14: 30:57 (#15)" (> Var (VarIdent "tmp%%" (VarIdentDisambiguate VirTemp 3))) (Typ Datatype "core!ops.control_flow.ControlFlow."
                                  ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()) (Typ Int (IntRange U 32))) ()))
                               ) (Typ Boxed (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible."
                                     () ())
                                   ) ()
                                  ) (Typ Int (IntRange U 32))
                                 ) ())))
                             ) (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible."
                                  () ())
                                ) ()
                               ) (Typ Int (IntRange U 32))
                              ) ()))
                           ) (Typ Boxed (Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ())))
                         ) (Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()))))
                     ) (@@ "063-fibfib.rs:30:56: 30:57 (#16)" (> Return (@@ "063-fibfib.rs:30:14: 30:57 (#15)" (> Call (CallTarget Fun (CallTargetKind
                           Static
                          ) (Fun :path "core!option.impl&%41.from_residual.") ((Typ Int (IntRange U 32))) () (AutospecUsage Final)
                         ) ((@@ "063-fibfib.rs:30:56: 30:57 (#16)" (> Var (VarIdent "residual" (VarIdentDisambiguate RustcId 137))) (Typ Datatype "core!option.Option."
                            ((Typ Datatype "core!convert.Infallible." () ())) ())))
                        ) (Typ Datatype "core!option.Option." ((Typ Int (IntRange U 32))) ()))
                      ) (Typ Decorate (TypDecoration Never) None (Typ Datatype "tuple%0." () ())))
                    ) (Typ Decorate (TypDecoration Never) None (Typ Datatype "tuple%0." () ()))
                   ) (@@ "063-fibfib.rs:30:14: 30:57 (#15)" (> Block (
                      (@ "063-fibfib.rs:30:14: 30:57 (#15)" (Stmt Decl :pattern (@@ "063-fibfib.rs:30:14: 30:57 (#15)" (Pattern Var :name (VarIdent
                           "val" (VarIdentDisambiguate RustcId 131)
                          ) :mutable false
                         ) (Typ Int (IntRange U 32))
                        ) :mode Exec :init (@@ "063-fibfib.rs:30:14: 30:57 (#15)" (> UnaryOpr (UnaryOpr Unbox (Typ Int (IntRange U 32))) (@@ "063-fibfib.rs:30:14: 30:57 (#15)"
                           (> UnaryOpr (UnaryOpr Field (FieldOpr :datatype "core!ops.control_flow.ControlFlow." :variant "Continue" :field "0" :get_variant
                              false :check (VariantCheck None))
                            ) (@@ "063-fibfib.rs:30:14: 30:57 (#15)" (> UnaryOpr (UnaryOpr Unbox (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype
                                  "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()
                                 ) (Typ Int (IntRange U 32))
                                ) ())
                              ) (@@ "063-fibfib.rs:30:14: 30:57 (#15)" (> UnaryOpr (UnaryOpr Box (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype
                                    "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()
                                   ) (Typ Int (IntRange U 32))
                                  ) ())
                                ) (@@ "063-fibfib.rs:30:14: 30:57 (#15)" (> Var (VarIdent "tmp%%" (VarIdentDisambiguate VirTemp 3))) (Typ Datatype "core!ops.control_flow.ControlFlow."
                                  ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()) (Typ Int (IntRange U 32))) ()))
                               ) (Typ Boxed (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible."
                                     () ())
                                   ) ()
                                  ) (Typ Int (IntRange U 32))
                                 ) ())))
                             ) (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible."
                                  () ())
                                ) ()
                               ) (Typ Int (IntRange U 32))
                              ) ()))
                           ) (Typ Boxed (Typ Int (IntRange U 32))))
                         ) (Typ Int (IntRange U 32)))))
                     ) (@@ "063-fibfib.rs:30:14: 30:57 (#0)" (> Var (VarIdent "val" (VarIdentDisambiguate RustcId 131))) (Typ Int (IntRange U 32)))
                    ) (Typ Int (IntRange U 32)))
                  ) (Typ Int (IntRange U 32)))
                ) (Typ Int (IntRange U 32))
               ) (@@ "063-fibfib.rs:30:70: 30:84 (#0)" (> Block (
                  (@ "063-fibfib.rs:30:70: 30:84 (#21)" (Stmt Decl :pattern (@@ "063-fibfib.rs:30:70: 30:84 (#21)" (Pattern Var :name (VarIdent
                       "tmp%%" (VarIdentDisambiguate VirTemp 4)
                      ) :mutable false
                     ) (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible."
                          () ())
                        ) ()
                       ) (Typ Int (IntRange U 32))
                      ) ())
                    ) :mode Exec :init (@@ "063-fibfib.rs:30:70: 30:84 (#21)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "core!option.impl&%40.branch.")
                       ((Typ Int (IntRange U 32))) () (AutospecUsage Final)
                      ) ((@@ "063-fibfib.rs:30:70: 30:83 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "063_fibfib!fibfib.") ()
                          () (AutospecUsage Final)
                         ) ((@@ "063-fibfib.rs:30:77: 30:82 (#0)" (> Unary (UnaryOp Clip :range (IntRange U 32) :truncate true) (@@ "063-fibfib.rs:30:77: 30:82 (#0)"
                             (> Binary (BinaryOp Arith (ArithOp Sub) Exec) (@@ "063-fibfib.rs:30:77: 30:78 (#0)" (> Var (VarIdent "x" (VarIdentDisambiguate
                                  VirParam))
                               ) (Typ Int (IntRange U 32))
                              ) (@@ "063-fibfib.rs:30:81: 30:82 (#0)" (> Const (Constant Int 3)) (Typ Int (IntRange U 32)))
                             ) (Typ Int (IntRange U 32)))
                           ) (Typ Int (IntRange U 32))))
                        ) (Typ Datatype "core!option.Option." ((Typ Int (IntRange U 32))) ())))
                     ) (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible."
                          () ())
                        ) ()
                       ) (Typ Int (IntRange U 32))
                      ) ()))))
                 ) (@@ "063-fibfib.rs:30:83: 30:84 (#22)" (> If (@@ "063-fibfib.rs:30:83: 30:84 (#22)" (> Binary (BinaryOp And) (@@ "063-fibfib.rs:30:83: 30:84 (#22)"
                      (> UnaryOpr (UnaryOpr IsVariant :datatype "core!ops.control_flow.ControlFlow." :variant "Break") (@@ "063-fibfib.rs:30:70: 30:84 (#21)"
                        (> Var (VarIdent "tmp%%" (VarIdentDisambiguate VirTemp 4))) (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype
                           "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()
                          ) (Typ Int (IntRange U 32))
                         ) ()))
                      ) (Typ Bool)
                     ) (@@ "063-fibfib.rs:30:83: 30:84 (#22)" (> Const (Constant Bool true)) (Typ Bool))
                    ) (Typ Bool)
                   ) (@@ "063-fibfib.rs:30:83: 30:84 (#22)" (> Block (
                      (@ "063-fibfib.rs:30:83: 30:84 (#22)" (Stmt Decl :pattern (@@ "063-fibfib.rs:30:83: 30:84 (#22)" (Pattern Var :name (VarIdent
                           "residual" (VarIdentDisambiguate RustcId 162)
                          ) :mutable false
                         ) (Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ())
                        ) :mode Exec :init (@@ "063-fibfib.rs:30:83: 30:84 (#22)" (> UnaryOpr (UnaryOpr Unbox (Typ Datatype "core!option.Option." ((Typ
                              Datatype "core!convert.Infallible." () ())
                            ) ())
                          ) (@@ "063-fibfib.rs:30:83: 30:84 (#22)" (> UnaryOpr (UnaryOpr Field (FieldOpr :datatype "core!ops.control_flow.ControlFlow."
                              :variant "Break" :field "0" :get_variant false :check (VariantCheck None))
                            ) (@@ "063-fibfib.rs:30:70: 30:84 (#21)" (> UnaryOpr (UnaryOpr Unbox (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype
                                  "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()
                                 ) (Typ Int (IntRange U 32))
                                ) ())
                              ) (@@ "063-fibfib.rs:30:70: 30:84 (#21)" (> UnaryOpr (UnaryOpr Box (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype
                                    "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()
                                   ) (Typ Int (IntRange U 32))
                                  ) ())
                                ) (@@ "063-fibfib.rs:30:70: 30:84 (#21)" (> Var (VarIdent "tmp%%" (VarIdentDisambiguate VirTemp 4))) (Typ Datatype "core!ops.control_flow.ControlFlow."
                                  ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()) (Typ Int (IntRange U 32))) ()))
                               ) (Typ Boxed (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible."
                                     () ())
                                   ) ()
                                  ) (Typ Int (IntRange U 32))
                                 ) ())))
                             ) (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible."
                                  () ())
                                ) ()
                               ) (Typ Int (IntRange U 32))
                              ) ()))
                           ) (Typ Boxed (Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ())))
                         ) (Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()))))
                     ) (@@ "063-fibfib.rs:30:83: 30:84 (#22)" (> Return (@@ "063-fibfib.rs:30:70: 30:84 (#21)" (> Call (CallTarget Fun (CallTargetKind
                           Static
                          ) (Fun :path "core!option.impl&%41.from_residual.") ((Typ Int (IntRange U 32))) () (AutospecUsage Final)
                         ) ((@@ "063-fibfib.rs:30:83: 30:84 (#22)" (> Var (VarIdent "residual" (VarIdentDisambiguate RustcId 162))) (Typ Datatype "core!option.Option."
                            ((Typ Datatype "core!convert.Infallible." () ())) ())))
                        ) (Typ Datatype "core!option.Option." ((Typ Int (IntRange U 32))) ()))
                      ) (Typ Decorate (TypDecoration Never) None (Typ Datatype "tuple%0." () ())))
                    ) (Typ Decorate (TypDecoration Never) None (Typ Datatype "tuple%0." () ()))
                   ) (@@ "063-fibfib.rs:30:70: 30:84 (#21)" (> Block (
                      (@ "063-fibfib.rs:30:70: 30:84 (#21)" (Stmt Decl :pattern (@@ "063-fibfib.rs:30:70: 30:84 (#21)" (Pattern Var :name (VarIdent
                           "val" (VarIdentDisambiguate RustcId 156)
                          ) :mutable false
                         ) (Typ Int (IntRange U 32))
                        ) :mode Exec :init (@@ "063-fibfib.rs:30:70: 30:84 (#21)" (> UnaryOpr (UnaryOpr Unbox (Typ Int (IntRange U 32))) (@@ "063-fibfib.rs:30:70: 30:84 (#21)"
                           (> UnaryOpr (UnaryOpr Field (FieldOpr :datatype "core!ops.control_flow.ControlFlow." :variant "Continue" :field "0" :get_variant
                              false :check (VariantCheck None))
                            ) (@@ "063-fibfib.rs:30:70: 30:84 (#21)" (> UnaryOpr (UnaryOpr Unbox (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype
                                  "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()
                                 ) (Typ Int (IntRange U 32))
                                ) ())
                              ) (@@ "063-fibfib.rs:30:70: 30:84 (#21)" (> UnaryOpr (UnaryOpr Box (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype
                                    "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()
                                   ) (Typ Int (IntRange U 32))
                                  ) ())
                                ) (@@ "063-fibfib.rs:30:70: 30:84 (#21)" (> Var (VarIdent "tmp%%" (VarIdentDisambiguate VirTemp 4))) (Typ Datatype "core!ops.control_flow.ControlFlow."
                                  ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible." () ())) ()) (Typ Int (IntRange U 32))) ()))
                               ) (Typ Boxed (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible."
                                     () ())
                                   ) ()
                                  ) (Typ Int (IntRange U 32))
                                 ) ())))
                             ) (Typ Datatype "core!ops.control_flow.ControlFlow." ((Typ Datatype "core!option.Option." ((Typ Datatype "core!convert.Infallible."
                                  () ())
                                ) ()
                               ) (Typ Int (IntRange U 32))
                              ) ()))
                           ) (Typ Boxed (Typ Int (IntRange U 32))))
                         ) (Typ Int (IntRange U 32)))))
                     ) (@@ "063-fibfib.rs:30:70: 30:84 (#0)" (> Var (VarIdent "val" (VarIdentDisambiguate RustcId 156))) (Typ Int (IntRange U 32)))
                    ) (Typ Int (IntRange U 32)))
                  ) (Typ Int (IntRange U 32)))
                ) (Typ Int (IntRange U 32))))
             ) (Typ Datatype "core!option.Option." ((Typ Int (IntRange U 32))) ()))
           ) (Typ Datatype "core!option.Option." ((Typ Int (IntRange U 32))) ()))
         ) (Typ Datatype "core!option.Option." ((Typ Int (IntRange U 32))) ()))
       ) (Typ Datatype "core!option.Option." ((Typ Int (IntRange U 32))) ()))
     ) (Typ Datatype "core!option.Option." ((Typ Int (IntRange U 32))) ()))
   ) (Typ Datatype "core!option.Option." ((Typ Int (IntRange U 32))) ())
  ) :extra_dependencies ()))

(group_id "vstd!array.group_array_axioms.")

(group_id "vstd!map.group_map_axioms.")

(group_id "vstd!multiset.group_multiset_axioms.")

(group_id "vstd!ptr.group_ptr_axioms.")

(group_id "vstd!raw_ptr.group_raw_ptr_axioms.")

(group_id "vstd!seq.group_seq_axioms.")

(group_id "vstd!seq_lib.group_seq_lib_default.")

(group_id "vstd!set.group_set_axioms.")

(group_id "vstd!set_lib.group_set_lib_axioms.")

(group_id "vstd!slice.group_slice_axioms.")

(group_id "vstd!string.group_string_axioms.")

(group_id "vstd!std_specs.bits.group_bits_axioms.")

(group_id "vstd!std_specs.control_flow.group_control_flow_axioms.")

(group_id "vstd!std_specs.range.group_range_axioms.")

(group_id "vstd!std_specs.vec.group_vec_axioms.")

(group_id "vstd!group_vstd_default.")

(trait "vstd!std_specs.option.OptionAdditionalFns.")

(trait_impl "vstd!std_specs.option.impl&%0." "vstd!std_specs.option.OptionAdditionalFns.")

(module_id "vstd!arithmetic.internals.div_internals_nonlinear.")

(module_id "vstd!arithmetic.internals.general_internals.")

(module_id "vstd!arithmetic.internals.mod_internals_nonlinear.")

(module_id "vstd!arithmetic.internals.mul_internals_nonlinear.")

(module_id "vstd!arithmetic.internals.div_internals.")

(module_id "vstd!arithmetic.internals.mod_internals.")

(module_id "vstd!arithmetic.internals.mul_internals.")

(module_id "vstd!std_specs.atomic.atomic_specs_u8.")

(module_id "vstd!std_specs.atomic.atomic_specs_u16.")

(module_id "vstd!std_specs.atomic.atomic_specs_u32.")

(module_id "vstd!std_specs.atomic.atomic_specs_u64.")

(module_id "vstd!std_specs.atomic.atomic_specs_usize.")

(module_id "vstd!std_specs.atomic.atomic_specs_i8.")

(module_id "vstd!std_specs.atomic.atomic_specs_i16.")

(module_id "vstd!std_specs.atomic.atomic_specs_i32.")

(module_id "vstd!std_specs.atomic.atomic_specs_i64.")

(module_id "vstd!std_specs.atomic.atomic_specs_isize.")

(module_id "vstd!std_specs.atomic.atomic_specs_bool.")

(module_id "vstd!std_specs.num.u8_specs.")

(module_id "vstd!std_specs.num.i8_specs.")

(module_id "vstd!std_specs.num.u16_specs.")

(module_id "vstd!std_specs.num.i16_specs.")

(module_id "vstd!std_specs.num.u32_specs.")

(module_id "vstd!std_specs.num.i32_specs.")

(module_id "vstd!std_specs.num.u64_specs.")

(module_id "vstd!std_specs.num.i64_specs.")

(module_id "vstd!std_specs.num.u128_specs.")

(module_id "vstd!std_specs.num.i128_specs.")

(module_id "vstd!std_specs.num.usize_specs.")

(module_id "vstd!std_specs.num.isize_specs.")

(module_id "vstd!arithmetic.internals.")

(module_id "vstd!arithmetic.div_mod.")

(module_id "vstd!arithmetic.logarithm.")

(module_id "vstd!arithmetic.mul.")

(module_id "vstd!arithmetic.power.")

(module_id "vstd!arithmetic.power2.")

(module_id "vstd!std_specs.atomic.")

(module_id "vstd!std_specs.bits.")

(module_id "vstd!std_specs.clone.")

(module_id "vstd!std_specs.control_flow.")

(module_id "vstd!std_specs.core.")

(module_id "vstd!std_specs.num.")

(module_id "vstd!std_specs.option.")

(module_id "vstd!std_specs.range.")

(module_id "vstd!std_specs.result.")

(module_id "vstd!std_specs.vec.")

(module_id "vstd!std_specs.smart_ptrs.")

(module_id "vstd!raw_ptr.ptr_mut_specs.")

(module_id "vstd!raw_ptr.ptr_const_specs.")

(module_id "vstd!arithmetic.")

(module_id "vstd!array.")

(module_id "vstd!atomic.")

(module_id "vstd!atomic_ghost.")

(module_id "vstd!bits.")

(module_id "vstd!bytes.")

(module_id "vstd!calc_macro.")

(module_id "vstd!cell.")

(module_id "vstd!function.")

(module_id "vstd!invariant.")

(module_id "vstd!layout.")

(module_id "vstd!map.")

(module_id "vstd!map_lib.")

(module_id "vstd!math.")

(module_id "vstd!modes.")

(module_id "vstd!multiset.")

(module_id "vstd!pcm.")

(module_id "vstd!pcm_lib.")

(module_id "vstd!pervasive.")

(module_id "vstd!ptr.")

(module_id "vstd!raw_ptr.")

(module_id "vstd!seq.")

(module_id "vstd!seq_lib.")

(module_id "vstd!set.")

(module_id "vstd!set_lib.")

(module_id "vstd!slice.")

(module_id "vstd!state_machine_internal.")

(module_id "vstd!storage_protocol.")

(module_id "vstd!string.")

(module_id "vstd!thread.")

(module_id "vstd!view.")

(module_id "vstd!relations.")

(module_id "vstd!std_specs.")

(module_id "vstd!prelude.")

(module_id "vstd!.")

(module_id "063_fibfib!.")

(external_fn (Fun :path "vstd!invariant.open_atomic_invariant_begin."))

(external_fn (Fun :path "vstd!invariant.open_local_invariant_begin."))

(external_fn (Fun :path "vstd!invariant.open_invariant_end."))

(external_fn (Fun :path "vstd!pervasive.runtime_assert_internal."))

(external_fn (Fun :path "063_fibfib!main."))

(arch_word_bits (ArchWordBits Either32Or64))

